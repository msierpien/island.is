name: Monorepo pipeline - pull request

on:
  pull_request: {}
  workflow_dispatch: {}

env:
  COMPOSE_HTTP_TIMEOUT: 180
  GITHUB_ACTIONS_CACHE_URL: https://cache.dev01.devland.is/

jobs:
  prepare:
    runs-on: self-hosted
    timeout-minutes: 25

    env:
      AFFECTED_ALL: ${{ secrets.AFFECTED_ALL }}
      CHUNK_SIZE: 7

    outputs:
      TEST_CHUNKS: ${{ steps.test_projects.outputs.CHUNKS }}
      E2E_CHUNKS: ${{ steps.e2e_projects.outputs.CHUNKS }}
      E2E_BUILD_ID: ${{ steps.e2e_projects.outputs.BUILD_ID }}
      LINT_CHUNKS: ${{ steps.lint_projects.outputs.CHUNKS }}
      UNAFFECTED: ${{ steps.unaffected.outputs.UNAFFECTED }}
      BUILD_CHUNKS: ${{ steps.build_projects.outputs.CHUNKS }}
      BUILD_MAP: ${{ steps.build_map.outputs.BUILD_MAP }}
      node-modules-hash: ${{ steps.calculate_node_modules_hash.outputs.node-modules-hash }}
      generated-files-cache-key: ${{ steps.calculate_generated_files_cache_key.outputs.generated-files-cache-key }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - run: |
          echo "HEAD=$GITHUB_SHA" >> $GITHUB_ENV
          echo "BASE=$(git merge-base origin/main $GITHUB_SHA)" >> $GITHUB_ENV
        name: Preparing HEAD and BASE tags

      - name: Calculate cache key for node_modules
        id: calculate_node_modules_hash
        run: |
          PACKAGE_JSON_HASH=$(cat package.json | jq '{resolutions,dependencies,devDependencies}' | sha1sum -t | cut -f1 -d" ")
          echo "PACKAGE_JSON_HASH: $PACKAGE_JSON_HASH"
          export NODE_MODULES_HASH=${{ runner.os }}-${{ hashFiles('yarn.lock') }}-$PACKAGE_JSON_HASH
          echo "NODE_MODULES_HASH: $NODE_MODULES_HASH"
          echo "::set-output name=node-modules-hash::$NODE_MODULES_HASH"

      - name: Calculate cache keys for generated files
        id: calculate_generated_files_cache_key
        run: |
          export HASH=${{ hashFiles('scripts/schemas.js', 'libs/cms/src/lib/generated/contentfulTypes.d.ts', 'apps/air-discount-scheme/web/i18n/withLocale.tsx', 'apps/air-discount-scheme/web/components/AppLayout/AppLayout.tsx', 'apps/air-discount-scheme/web/components/Header/Header.tsx', 'apps/air-discount-scheme/web/screens/**.tsx', 'apps/gjafakort/api/src/**.typeDefs.ts', 'apps/**/codegen.yml', 'libs/**/codegen.yml', 'apps/**/*.model.ts', 'libs/**/*.model.ts', 'apps/**/*.enum.ts', 'libs/**/*.enum.ts', 'apps/**/queries/**/*.tsx?', 'apps/**/queries/**/*.ts', 'libs/**/queries/**/*.tsx?', 'apps/**/*.resolver.ts', 'libs/**/*.resolver.ts', 'apps/**/*.service.ts', 'libs/**/*.service.ts', 'apps/**/*.dto.ts', 'libs/**/*.dto.ts', 'apps/**/*.input.ts', 'libs/**/*.input.ts', 'apps/**/*.module.ts', 'libs/**/*.module.ts', 'apps/**/*.controller.ts', 'libs/**/*.controller.ts', 'apps/**/*.union.ts', 'libs/**/*.union.ts', 'apps/**/*.graphql.ts', 'libs/**/*.graphql.ts') }}
          export GENERATED_FILES_KEY=${{ runner.os }}-$HASH-files-generated
          echo "GENERATED_FILES_KEY: $GENERATED_FILES_KEY"
          echo "::set-output name=generated-files-cache-key::$GENERATED_FILES_KEY"

      - name: Cache for NodeJS dependencies - host OS
        id: node-modules
        uses: island-is/cache@v0.1
        with:
          path: node_modules
          key: ${{ steps.calculate_node_modules_hash.outputs.node-modules-hash }}-yarn

      - name: Building NodeJS dependencies
        if: steps.node-modules.outputs.cache-hit != 'true'
        run: ./scripts/ci/10_prepare-host-deps.sh

      - name: Cache for cypress
        uses: island-is/cache@v0.1
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-${{ steps.calculate_node_modules_hash.outputs.node-modules-hash }}

      - name: Verify cypress
        id: cypress-check
        run: npx cypress verify
        continue-on-error: true

      - name: Install cypress
        if: steps.cypress-check.outcome != 'success'
        run: npx cypress install

      - name: Cache for generated files
        id: generated-files-cache
        uses: island-is/cache@v0.1
        with:
          path: generated_files.tar.gz
          key: ${{ steps.calculate_generated_files_cache_key.outputs.generated-files-cache-key }}

      - name: Generate schemas
        if: steps.generated-files-cache.outputs.cache-hit != 'true'
        run: tar zcvf generated_files.tar.gz $(./scripts/ci/get-files-touched-by.sh yarn schemas --skip-cache | xargs realpath --relative-to $(pwd))

      # - name: Security audit Node modules
      #   run: ./scripts/ci/20_security-audit.sh

      - name: License audit Node modules
        run: ./scripts/ci/20_license-audit.sh

      - name: Prepare lint targets
        id: lint_projects
        run: |
          CHUNKS=$(./scripts/ci/generate-chunks.sh lint)
          if [[ $CHUNKS != "[]" ]]; then
            echo "::set-output name=CHUNKS::{\"projects\":$CHUNKS}"
          fi

      - name: Prepare test targets
        id: test_projects
        run: |
          CHUNKS=$(./scripts/ci/generate-chunks.sh test)
          if [[ $CHUNKS != "[]" ]]; then
            echo "::set-output name=CHUNKS::{\"projects\":$CHUNKS}"
          fi

      - name: Prepare e2e targets
        id: e2e_projects
        env:
          CHUNK_SIZE: 1
        run: |
          CHUNKS=$(./scripts/ci/generate-chunks.sh e2e-ci)
          if [[ $CHUNKS != "[]" ]]; then
            echo "::set-output name=CHUNKS::{\"projects\":$CHUNKS}"
          fi
          echo "::set-output name=BUILD_ID::$GITHUB_RUN_ID-$(uuidgen)"

      - name: Prepare build targets
        id: build_projects
        env:
          CHUNK_SIZE: 4
        run: |
          CHUNKS=$(./scripts/ci/generate-chunks.sh build)
          if [[ $CHUNKS != "[]" ]]; then
            echo "::set-output name=CHUNKS::{\"projects\":$CHUNKS}"
          fi

  tests:
    needs:
      - prepare
    if: needs.prepare.outputs.TEST_CHUNKS
    runs-on: self-hosted
    timeout-minutes: 25
    env:
      AFFECTED_PROJECTS: ${{ matrix.projects }}
      MAX_JOBS: 1
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.TEST_CHUNKS) }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/unit-test
        with:
          node-modules-hash: ${{ needs.prepare.outputs.node-modules-hash }}
          generated-files-cache-key: ${{ needs.prepare.outputs.generated-files-cache-key }}
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  e2e:
    needs:
      - prepare
    if: needs.prepare.outputs.E2E_CHUNKS
    runs-on: self-hosted
    timeout-minutes: 25
    env:
      AFFECTED_PROJECT: ${{ matrix.projects }}
      CYPRESS_PROJECT_ID: 4q7jz8
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      API_MOCKS: 'true'
      NODE_OPTIONS: --max-old-space-size=4096
      E2E_BUILD_ID: ${{needs.prepare.outputs.E2E_BUILD_ID}}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.E2E_CHUNKS) }}
    steps:
      - uses: actions/checkout@v2

      - name: Cache for NodeJS dependencies - host OS
        uses: island-is/cache@v0.1
        with:
          path: node_modules
          key: ${{ needs.prepare.outputs.node-modules-hash }}-yarn

      - name: Cache for cypress
        uses: island-is/cache@v0.1
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-${{ needs.prepare.outputs.node-modules-hash }}

      - name: Cache for generated files
        uses: island-is/cache@v0.1
        with:
          path: generated_files.tar.gz
          key: ${{ needs.prepare.outputs.generated-files-cache-key }}

      - name: Untar generated files
        run: tar zxvf generated_files.tar.gz

      - name: Increase fs watchers for cypress
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Running e2e tests
        run: ./scripts/ci/40_e2e.sh ${AFFECTED_PROJECT}

  linting-workspace:
    needs:
      - prepare
    runs-on: self-hosted
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Cache for NodeJS dependencies - host OS
        id: node-modules
        uses: island-is/cache@v0.1
        with:
          path: node_modules
          key: ${{ needs.prepare.outputs.node-modules-hash }}-yarn
      - name: Linting workspace
        run: ./scripts/ci/20_lint-workspace.sh
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@1.1.0
        with:
          ignore: node_modules
          severity: warning

  formatting:
    needs:
      - prepare
    runs-on: self-hosted
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Cache for NodeJS dependencies - host OS
        id: node-modules
        uses: island-is/cache@v0.1
        with:
          path: node_modules
          key: ${{ needs.prepare.outputs.node-modules-hash }}-yarn
      - name: Check formatting
        run: ./scripts/ci/20_check-formatting.sh

  linting:
    needs:
      - prepare
    runs-on: self-hosted
    timeout-minutes: 25
    if: needs.prepare.outputs.LINT_CHUNKS
    env:
      AFFECTED_PROJECTS: ${{ matrix.projects }}
      NODE_OPTIONS: --max-old-space-size=4096
      MAX_JOBS: 1
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.LINT_CHUNKS) }}
    steps:
      - uses: actions/checkout@v2

      - name: Cache for NodeJS dependencies - host OS
        uses: island-is/cache@v0.1
        with:
          path: node_modules
          key: ${{ needs.prepare.outputs.node-modules-hash }}-yarn

      - name: Cache for generated files
        uses: island-is/cache@v0.1
        with:
          path: generated_files.tar.gz
          key: ${{ needs.prepare.outputs.generated-files-cache-key }}

      - name: Untar generated files
        run: tar zxvf generated_files.tar.gz

      - name: Linting
        run: ./scripts/ci/run-in-parallel-native.sh lint

  build:
    needs:
      - prepare
    runs-on: self-hosted
    timeout-minutes: 25
    env:
      AFFECTED_PROJECTS: ${{ matrix.projects }}
      MAX_JOBS: 2
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.BUILD_CHUNKS) }}
    if: needs.prepare.outputs.BUILD_CHUNKS
    steps:
      - uses: actions/checkout@v2

      - name: Cache for NodeJS dependencies - host OS
        uses: island-is/cache@v0.1
        with:
          path: node_modules
          key: ${{ needs.prepare.outputs.node-modules-hash }}-yarn

      - name: Cache for generated files
        uses: island-is/cache@v0.1
        with:
          path: generated_files.tar.gz
          key: ${{ needs.prepare.outputs.generated-files-cache-key }}

      - name: Untar generated files
        run: tar zxvf generated_files.tar.gz

      - name: Building
        run: ./scripts/ci/run-in-parallel-native.sh build

  success:
    runs-on: self-hosted
    if: always()
    needs:
      - prepare
      - linting-workspace
      - tests
      - linting
      - formatting
      - e2e
      - build
    steps:
      - name: Check prepare success
        run: '[[ ${{ needs.prepare.result }} == "success" ]] || exit 1'
      - name: Check tests success
        run: '[[ ${{ needs.tests.result }} != "failure" ]] || exit 1'
      - name: Check e2e success
        run: '[[ ${{ needs.e2e.result }} != "failure" ]] || exit 1'
      - name: Check linting success
        run: '[[ ${{ needs.linting.result }} != "failure" ]] || exit 1'
      - name: Check formatting success
        run: '[[ ${{ needs.formatting.result }} != "failure" ]] || exit 1'
      - name: Check build success
        run: '[[ ${{ needs.build.result }} != "failure" ]] || exit 1'
      - name: Announce success
        run: echo "Build is successful"
