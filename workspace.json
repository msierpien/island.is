{
  "version": 1,
  "cli": {
    "defaultCollection": "@nrwl/react"
  },
  "defaultProject": "web",
  "schematics": {
    "@nrwl/workspace": {
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/cypress": {
      "cypress-project": {
        "linter": "eslint"
      }
    },
    "@nrwl/react": {
      "application": {
        "linter": "eslint",
        "style": "scss",
        "pascalCaseFiles": true,
        "babel": true
      },
      "component": {
        "style": "scss"
      },
      "library": {
        "style": "scss",
        "linter": "eslint"
      }
    },
    "@nrwl/next": {
      "application": {
        "style": "scss",
        "linter": "eslint"
      }
    },
    "@nrwl/web": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/node": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/nx-plugin": {
      "plugin": {
        "linter": "eslint"
      }
    },
    "@nrwl/nest": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/express": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    }
  },
  "projects": {
    "air-discount-scheme-api": {
      "root": "apps/air-discount-scheme/api",
      "sourceRoot": "apps/air-discount-scheme/api/src",
      "projectType": "application",
      "prefix": "air-discount-scheme-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/air-discount-scheme/api",
            "main": "apps/air-discount-scheme/api/src/main.ts",
            "tsConfig": "apps/air-discount-scheme/api/tsconfig.app.json",
            "assets": [],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "air-discount-scheme-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/air-discount-scheme/api/tsconfig.app.json",
              "apps/air-discount-scheme/api/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/air-discount-scheme/api/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/air-discount-scheme/api/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/air-discount-scheme/api"]
        },
        "schemas/build-graphql-schema": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P apps/air-discount-scheme/api/tsconfig.json scripts/build-graphql-schema.ts apps/air-discount-scheme/api/src/app/app.module"
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config apps/air-discount-scheme/codegen.yml"
          }
        },
        "docker-express": {}
      }
    },
    "air-discount-scheme-backend": {
      "root": "apps/air-discount-scheme/backend",
      "sourceRoot": "apps/air-discount-scheme/backend/src",
      "projectType": "application",
      "prefix": "air-discount-scheme-backend",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/air-discount-scheme/backend",
            "main": "apps/air-discount-scheme/backend/src/main.ts",
            "tsConfig": "apps/air-discount-scheme/backend/tsconfig.app.json",
            "assets": [
              {
                "glob": "*sequelize*",
                "input": "apps/air-discount-scheme/backend",
                "output": "./"
              },
              {
                "glob": "migrations/**",
                "input": "apps/air-discount-scheme/backend",
                "output": "./"
              },
              {
                "glob": ".sequelizerc",
                "input": "apps/air-discount-scheme/backend",
                "output": "./"
              }
            ],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "air-discount-scheme-backend:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/air-discount-scheme/backend/tsconfig.app.json",
              "apps/air-discount-scheme/backend/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/air-discount-scheme/backend/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/air-discount-scheme/backend/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/air-discount-scheme/backend"]
        },
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d",
            "cwd": "apps/air-discount-scheme/backend"
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/air-discount-scheme/backend/src/openapi.yaml",
            "command": "cross-env INIT_SCHEMA=true yarn ts-node --files -P apps/air-discount-scheme/backend/tsconfig.app.json apps/air-discount-scheme/backend/src/buildOpenApi.ts"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli db:migrate",
            "cwd": "apps/air-discount-scheme/backend"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli migration:generate --name $(whoami)",
            "cwd": "apps/air-discount-scheme/backend"
          }
        },
        "migrate/undo": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli db:migrate:undo",
            "cwd": "apps/air-discount-scheme/backend"
          }
        },
        "seed": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli db:seed:all",
            "cwd": "apps/air-discount-scheme/backend"
          }
        },
        "docker-express": {}
      }
    },
    "air-discount-scheme-consts": {
      "root": "libs/air-discount-scheme/consts",
      "sourceRoot": "libs/air-discount-scheme/consts/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/air-discount-scheme/consts/tsconfig.lib.json",
              "libs/air-discount-scheme/consts/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/air-discount-scheme/consts/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/air-discount-scheme/consts/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/air-discount-scheme/consts"]
        }
      }
    },
    "air-discount-scheme-types": {
      "root": "libs/air-discount-scheme/types",
      "sourceRoot": "libs/air-discount-scheme/types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/air-discount-scheme/types/tsconfig.lib.json",
              "libs/air-discount-scheme/types/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/air-discount-scheme/types/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/air-discount-scheme/types/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/air-discount-scheme/types"]
        }
      }
    },
    "air-discount-scheme-web": {
      "root": "apps/air-discount-scheme/web",
      "sourceRoot": "apps/air-discount-scheme/web",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "dist/apps/air-discount-scheme/web",
            "commands": [
              "yarn nx build-next air-discount-scheme-web",
              "yarn nx build-server air-discount-scheme-web"
            ]
          },
          "configurations": {
            "production": {
              "args": "--prod"
            }
          }
        },
        "build-next": {
          "builder": "@nrwl/next:build",
          "options": {
            "root": "apps/air-discount-scheme/web",
            "outputPath": "dist/apps/air-discount-scheme/web"
          },
          "configurations": {
            "production": {}
          },
          "outputs": ["{options.outputPath}"]
        },
        "build-server": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/air-discount-scheme/web",
            "main": "apps/air-discount-scheme/web/server.ts",
            "tsConfig": "apps/air-discount-scheme/web/tsconfig.json",
            "maxWorkers": 2,
            "assets": ["apps/air-discount-scheme/web/next-modules"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "air-discount-scheme-web:build-server"
          }
        },
        "export": {
          "builder": "@nrwl/next:export",
          "options": {
            "buildTarget": "air-discount-scheme-web:build:production"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/air-discount-scheme/web/tsconfig.json",
              "apps/air-discount-scheme/web/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/air-discount-scheme/web/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/air-discount-scheme/web/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/air-discount-scheme/web"]
        },
        "translations": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "quicktype is.json -o translation.d.ts --top-level Translation",
            "cwd": "apps/air-discount-scheme/web/i18n/locales"
          }
        },
        "docker-next": {}
      }
    },
    "air-discount-scheme-web-e2e": {
      "root": "apps/air-discount-scheme/web-e2e",
      "sourceRoot": "apps/air-discount-scheme/web-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/air-discount-scheme/web-e2e/cypress.json",
            "tsConfig": "apps/air-discount-scheme/web-e2e/tsconfig.e2e.json",
            "baseUrl": "http://localhost:4200",
            "devServerTarget": "air-discount-scheme-web:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": ""
            }
          }
        },
        "e2e-ci": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn e2e-ci -n air-discount-scheme-web-e2e -d dist/apps/air-discount-scheme/web -c"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/air-discount-scheme/web-e2e/tsconfig.e2e.json"],
            "exclude": [
              "**/node_modules/**",
              "!apps/air-discount-scheme/web-e2e/**/*"
            ]
          }
        }
      }
    },
    "api": {
      "root": "apps/api",
      "sourceRoot": "apps/api/src",
      "projectType": "application",
      "prefix": "api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/api",
            "main": "apps/api/src/main.ts",
            "tsConfig": "apps/api/tsconfig.app.json",
            "showCircularDependencies": false,
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/api/tsconfig.app.json",
              "apps/api/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/api/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/api/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/api"]
        },
        "schemas/build-graphql-schema": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P apps/api/tsconfig.json scripts/build-graphql-schema.ts apps/api/src/app/app.module"
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "parallel": false,
            "command": "graphql-codegen --config apps/api/codegen.yml"
          }
        },
        "contentful-types": {
          "builder": "@nrwl/workspace:run-commands",
          "outputPath": "libs/cms/scripts/generateContentfulTypes.ts",
          "options": {
            "command": "yarn ts-node -P apps/api/tsconfig.app.json ./libs/cms/scripts/generateContentfulTypes.ts"
          }
        },
        "contentType": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P apps/api/tsconfig.app.json ./libs/cms/scripts/contentType.ts {args.id} {args.sys} {args.overwrite}"
          }
        },
        "docker-express": {}
      }
    },
    "api-catalogue-consts": {
      "root": "libs/api-catalogue/consts",
      "sourceRoot": "libs/api-catalogue/consts/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/api-catalogue/consts/.eslintrc",
            "tsConfig": [
              "libs/api-catalogue/consts/tsconfig.lib.json",
              "libs/api-catalogue/consts/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/api-catalogue/consts/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api-catalogue/consts/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api-catalogue/consts"]
        }
      }
    },
    "api-catalogue-elastic": {
      "root": "libs/api-catalogue/elastic",
      "sourceRoot": "libs/api-catalogue/elastic/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/api-catalogue/elastic/.eslintrc",
            "tsConfig": [
              "libs/api-catalogue/elastic/tsconfig.lib.json",
              "libs/api-catalogue/elastic/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/api-catalogue/elastic/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api-catalogue/elastic/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api-catalogue/elastic"]
        }
      }
    },
    "api-catalogue-services": {
      "root": "libs/api-catalogue/services",
      "sourceRoot": "libs/api-catalogue/services/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/api-catalogue/services/.eslintrc",
            "tsConfig": [
              "libs/api-catalogue/services/tsconfig.lib.json",
              "libs/api-catalogue/services/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/api-catalogue/services/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api-catalogue/services/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api-catalogue/services"]
        },
        "schemas/openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "parallel": false,
            "commands": [
              "yarn openapi-generator -o libs/api-catalogue/services/gen/fetch/xrd -i libs/api-catalogue/services/config/xrd-meta-oas.yaml",
              "yarn openapi-generator -o libs/api-catalogue/services/gen/fetch/xrd-rest -i libs/api-catalogue/services/config/xrd-rest-meta-oas.yaml"
            ]
          }
        }
      }
    },
    "api-catalogue-types": {
      "root": "libs/api-catalogue/types",
      "sourceRoot": "libs/api-catalogue/types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/api-catalogue/types/.eslintrc",
            "tsConfig": [
              "libs/api-catalogue/types/tsconfig.lib.json",
              "libs/api-catalogue/types/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/api-catalogue/types/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api-catalogue/types/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api-catalogue/types"]
        }
      }
    },
    "api-domains-api-catalogue": {
      "root": "libs/api/domains/api-catalogue",
      "sourceRoot": "libs/api/domains/api-catalogue/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/api/domains/api-catalogue/.eslintrc",
            "tsConfig": [
              "libs/api/domains/api-catalogue/tsconfig.lib.json",
              "libs/api/domains/api-catalogue/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/api-catalogue/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/api-catalogue/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/api-catalogue"]
        }
      }
    },
    "api-domains-application": {
      "root": "libs/api/domains/application",
      "sourceRoot": "libs/api/domains/application/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/application/tsconfig.lib.json",
              "libs/api/domains/application/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/application/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/application/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/application"]
        },
        "schemas/openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "libs/api/domains/application/gen/fetch",
            "command": "yarn openapi-generator -o libs/api/domains/application/gen/fetch -i apps/application-system/api/src/openapi.yaml --additional-properties=enumPropertyNaming=original"
          }
        }
      }
    },
    "api-domains-assets": {
      "root": "libs/api/domains/assets",
      "sourceRoot": "libs/api/domains/assets/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api/domains/assets/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api/domains/assets"],
          "options": {
            "jestConfig": "libs/api/domains/assets/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "api-domains-auth": {
      "root": "libs/api/domains/auth",
      "sourceRoot": "libs/api/domains/auth/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api/domains/auth/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api/domains/auth"],
          "options": {
            "jestConfig": "libs/api/domains/auth/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "api-domains-communications": {
      "root": "libs/api/domains/communications",
      "sourceRoot": "libs/api/domains/communications/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/communications/tsconfig.lib.json",
              "libs/api/domains/communications/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/communications/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/communications/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/communications"]
        }
      }
    },
    "api-domains-content-search": {
      "root": "libs/api/domains/content-search",
      "sourceRoot": "libs/api/domains/content-search/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/content-search/tsconfig.lib.json",
              "libs/api/domains/content-search/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/content-search/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/content-search/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/content-search"]
        }
      }
    },
    "api-domains-criminal-record": {
      "root": "libs/api/domains/criminal-record",
      "sourceRoot": "libs/api/domains/criminal-record/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api/domains/criminal-record/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api/domains/criminal-record"],
          "options": {
            "jestConfig": "libs/api/domains/criminal-record/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "api-domains-directorate-of-labour": {
      "root": "libs/api/domains/directorate-of-labour",
      "sourceRoot": "libs/api/domains/directorate-of-labour/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/directorate-of-labour/tsconfig.lib.json",
              "libs/api/domains/directorate-of-labour/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/directorate-of-labour/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/directorate-of-labour/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/directorate-of-labour"]
        }
      }
    },
    "api-domains-document-provider": {
      "root": "libs/api/domains/document-provider",
      "sourceRoot": "libs/api/domains/document-provider/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/document-provider/tsconfig.lib.json",
              "libs/api/domains/document-provider/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/document-provider/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/document-provider/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/document-provider"]
        },
        "schemas/openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "libs/api/domains/document-provider/gen/fetch",
            "command": "yarn openapi-generator -o libs/api/domains/document-provider/gen/fetch -i apps/services/documents/src/openapi.yaml"
          }
        }
      }
    },
    "api-domains-documents": {
      "root": "libs/api/domains/documents",
      "sourceRoot": "libs/api/domains/documents/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/service-portal/graphql/.eslintrc",
            "tsConfig": [
              "libs/api/domains/documents/tsconfig.lib.json",
              "libs/api/domains/documents/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/documents/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/documents/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/documents"]
        }
      }
    },
    "api-domains-driving-license": {
      "root": "libs/api/domains/driving-license",
      "sourceRoot": "libs/api/domains/driving-license/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/driving-license/tsconfig.lib.json",
              "libs/api/domains/driving-license/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/driving-license/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/driving-license/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/driving-license"]
        }
      }
    },
    "api-domains-education": {
      "root": "libs/api/domains/education",
      "sourceRoot": "libs/api/domains/education/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/education/tsconfig.lib.json",
              "libs/api/domains/education/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/education/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/education/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/education"]
        }
      }
    },
    "api-domains-endorsement-system": {
      "root": "libs/api/domains/endorsement-system",
      "sourceRoot": "libs/api/domains/endorsement-system/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/endorsement-system/tsconfig.lib.json",
              "libs/api/domains/endorsement-system/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/endorsement-system/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/endorsement-system/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/endorsement-system"]
        },
        "dev/init": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "yarn nx run services-endorsements-api:dev/init $NX_OPTIONS",
              "yarn nx run services-endorsements-api:schemas/build-openapi-internal $NX_OPTIONS",
              "yarn nx run api-domains-endorsement-system:schemas/openapi-generator $NX_OPTIONS"
            ],
            "parallel": false
          }
        },
        "dev": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "yarn nx run services-endorsements-api:dev $NX_OPTIONS &",
              "yarn start api $NX_OPTIONS &"
            ],
            "parallel": true
          }
        },
        "schemas/openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "libs/api/domains/endorsement-system/gen/fetch",
            "command": "yarn openapi-generator -o libs/api/domains/endorsement-system/gen/fetch -i apps/services/endorsements/api/src/openapi.yaml --additional-properties=enumPropertyNaming=original"
          }
        }
      }
    },
    "api-domains-file-upload": {
      "root": "libs/api/domains/file-upload",
      "sourceRoot": "libs/api/domains/file-upload/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/file-upload/tsconfig.lib.json",
              "libs/api/domains/file-upload/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/file-upload/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/file-upload/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/file-upload"]
        }
      }
    },
    "api-domains-finance": {
      "root": "libs/api/domains/finance",
      "sourceRoot": "libs/api/domains/finance/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api/domains/finance/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api/domains/finance"],
          "options": {
            "jestConfig": "libs/api/domains/finance/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "api-domains-health-insurance": {
      "root": "libs/api/domains/health-insurance",
      "sourceRoot": "libs/api/domains/health-insurance/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/health-insurance/tsconfig.lib.json",
              "libs/api/domains/health-insurance/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/health-insurance/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/health-insurance/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/health-insurance"]
        }
      }
    },
    "api-domains-icelandic-names-registry": {
      "root": "libs/api/domains/icelandic-names-registry",
      "sourceRoot": "libs/api/domains/icelandic-names-registry/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/api/domains/icelandic-names-registry/.eslintrc",
            "tsConfig": [
              "libs/api/domains/icelandic-names-registry/tsconfig.lib.json",
              "libs/api/domains/icelandic-names-registry/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/icelandic-names-registry/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/icelandic-names-registry/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/icelandic-names-registry"]
        }
      }
    },
    "api-domains-identity": {
      "root": "libs/api/domains/identity",
      "sourceRoot": "libs/api/domains/identity/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api/domains/identity/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api/domains/identity"],
          "options": {
            "jestConfig": "libs/api/domains/identity/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "api-domains-islykill": {
      "root": "libs/api/domains/islykill",
      "sourceRoot": "libs/api/domains/islykill/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api/domains/islykill/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api/domains/islykill"],
          "options": {
            "jestConfig": "libs/api/domains/islykill/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "api-domains-license-service": {
      "root": "libs/api/domains/license-service",
      "sourceRoot": "libs/api/domains/license-service/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api/domains/license-service/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api/domains/license-service"],
          "options": {
            "jestConfig": "libs/api/domains/license-service/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "api-domains-national-registry": {
      "root": "libs/api/domains/national-registry",
      "sourceRoot": "libs/api/domains/national-registry/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/national-registry/tsconfig.lib.json",
              "libs/api/domains/national-registry/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/national-registry/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/national-registry/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/national-registry"]
        }
      }
    },
    "api-domains-national-registry-x-road": {
      "root": "libs/api/domains/national-registry-x-road",
      "sourceRoot": "libs/api/domains/national-registry-x-road/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/national-registry-x-road/tsconfig.lib.json",
              "libs/api/domains/national-registry-x-road/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/national-registry-x-road/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/national-registry-x-road/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/national-registry-x-road"]
        }
      }
    },
    "api-domains-payment": {
      "root": "libs/api/domains/payment",
      "sourceRoot": "libs/api/domains/payment/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/payment/tsconfig.lib.json",
              "libs/api/domains/payment/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/api/domains/payment/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/payment/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/payment"]
        }
      }
    },
    "api-domains-payment-schedule": {
      "root": "libs/api/domains/payment-schedule",
      "sourceRoot": "libs/api/domains/payment-schedule/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/payment-schedule/tsconfig.lib.json",
              "libs/api/domains/payment-schedule/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/payment-schedule/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api/domains/payment-schedule"],
          "options": {
            "jestConfig": "libs/api/domains/payment-schedule/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "api-domains-regulations": {
      "root": "libs/api/domains/regulations",
      "sourceRoot": "libs/api/domains/regulations/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/regulations/tsconfig.lib.json",
              "libs/api/domains/regulations/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/regulations/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/regulations/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/regulations"]
        }
      }
    },
    "api-domains-rsk": {
      "root": "libs/api/domains/rsk",
      "sourceRoot": "libs/api/domains/rsk/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/rsk/tsconfig.lib.json",
              "libs/api/domains/rsk/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/api/domains/rsk/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/rsk/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/rsk"]
        }
      }
    },
    "api-domains-syslumenn": {
      "root": "libs/api/domains/syslumenn",
      "sourceRoot": "libs/api/domains/syslumenn/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/syslumenn/tsconfig.lib.json",
              "libs/api/domains/syslumenn/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/syslumenn/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/syslumenn/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/syslumenn"]
        }
      }
    },
    "api-domains-user-profile": {
      "root": "libs/api/domains/user-profile",
      "sourceRoot": "libs/api/domains/user-profile/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/domains/user-profile/tsconfig.lib.json",
              "libs/api/domains/user-profile/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/api/domains/user-profile/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/domains/user-profile/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/domains/user-profile"]
        },
        "schemas/openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "libs/api/domains/user-profile/gen/fetch",
            "command": "yarn openapi-generator -o libs/api/domains/user-profile/gen/fetch -i apps/services/user-profile/src/openapi.yaml"
          }
        }
      }
    },
    "api-mocks": {
      "root": "libs/api/mocks",
      "sourceRoot": "libs/api/mocks/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/api/mocks/tsconfig.lib.json",
              "libs/api/mocks/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/api/mocks/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api/mocks/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/api/mocks"]
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "graphql-codegen --config libs/api/mocks/codegen.yml",
              "yarn ts-node -P libs/shared/mocking/tsconfig.json libs/shared/mocking/scripts/generate-gql.ts apps/api/src/api.graphql libs/api/mocks/src/schema.ts"
            ]
          }
        }
      }
    },
    "api-schema": {
      "root": "libs/api/schema",
      "sourceRoot": "libs/api/schema/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["libs/api/schema/tsconfig.lib.json"],
            "exclude": ["**/node_modules/**", "!libs/api/schema/**/*"]
          }
        }
      }
    },
    "application-core": {
      "root": "libs/application/core",
      "sourceRoot": "libs/application/core/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/core/tsconfig.lib.json",
              "libs/application/core/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/application/core/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/core/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/core"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/core/src/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "application-data-providers": {
      "root": "libs/application/data-providers",
      "sourceRoot": "libs/application/data-providers/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/data-providers/tsconfig.lib.json",
              "libs/application/data-providers/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/data-providers/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/data-providers/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/data-providers"]
        }
      }
    },
    "application-graphql": {
      "root": "libs/application/graphql",
      "sourceRoot": "libs/application/graphql/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/graphql/tsconfig.lib.json",
              "libs/application/graphql/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/application/graphql/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/graphql/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/graphql"]
        }
      }
    },
    "application-system-api": {
      "root": "apps/application-system/api",
      "sourceRoot": "apps/application-system/api/src",
      "projectType": "application",
      "prefix": "application-system-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/application-system/api",
            "main": "apps/application-system/api/src/main.ts",
            "tsConfig": "apps/application-system/api/tsconfig.app.json",
            "assets": [
              {
                "glob": "*",
                "input": "apps/application-system/api/migrations",
                "output": "./migrations"
              },
              {
                "glob": "*",
                "input": "apps/application-system/api/seeders",
                "output": "./seeders"
              },
              {
                "glob": ".sequelizerc",
                "input": "apps/application-system/api",
                "output": "./"
              },
              {
                "glob": "sequelize.config.js",
                "input": "apps/application-system/api",
                "output": "./"
              },
              {
                "glob": "*",
                "input": "libs/application/template-api-modules/src/lib/modules/templates/parental-leave/emailGenerators/assets",
                "output": "./parental-leave-assets"
              },
              {
                "glob": "*",
                "input": "libs/application/template-api-modules/src/lib/modules/templates/accident-notification/emailGenerators/assets",
                "output": "./accident-notification-assets"
              },
              {
                "glob": "*",
                "input": "libs/email-service/src/tools/design",
                "output": "./email-service-assets"
              },
              {
                "glob": "*",
                "input": "libs/application/template-api-modules/src/lib/modules/templates/driving-license-submission/emailGenerators/assets",
                "output": "./driving-license-assets"
              }
            ],
            "webpackConfig": "apps/application-system/api/webpack.config.js",
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "application-system-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/application-system/api/tsconfig.app.json",
              "apps/application-system/api/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/application-system/api/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/application-system/api/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/application-system/api"]
        },
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d",
            "cwd": "apps/application-system/api"
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/application-system/api/src/openapi.yaml",
            "command": "cross-env INIT_SCHEMA=true yarn ts-node -P apps/application-system/api/tsconfig.app.json apps/application-system/api/src/buildOpenApi.ts"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli db:migrate",
            "cwd": "apps/application-system/api"
          }
        },
        "migrate/undo": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli db:migrate:undo --name {args.name}",
            "cwd": "apps/application-system/api"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli migration:generate --name {args.name}",
            "cwd": "apps/application-system/api"
          }
        },
        "docker-express": {}
      }
    },
    "application-system-form": {
      "root": "apps/application-system/form",
      "sourceRoot": "apps/application-system/form/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "baseHref": "/umsoknir/",
            "outputPath": "dist/apps/application-system/form",
            "index": "apps/application-system/form/src/index.html",
            "main": "apps/application-system/form/src/main.tsx",
            "polyfills": "apps/application-system/form/src/polyfills.ts",
            "tsConfig": "apps/application-system/form/tsconfig.app.json",
            "assets": [
              "apps/application-system/form/src/favicon.ico",
              "apps/application-system/form/src/mockServiceWorker.js",
              "apps/application-system/form/src/assets"
            ],
            "styles": ["apps/application-system/form/src/styles.css"],
            "scripts": [],
            "webpackConfig": "apps/application-system/form/webpack.config.js",
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "6mb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "port": 4242,
            "buildTarget": "application-system-form:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "application-system-form:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/application-system/form/tsconfig.app.json",
              "apps/application-system/form/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/application-system/form/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/application-system/form/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/application-system/form"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'apps/form/src/{app,routes,components}/**/*.{js,ts,tsx}'"
          }
        },
        "docker-static": {}
      }
    },
    "application-system-form-e2e": {
      "root": "apps/application-system/form-e2e",
      "sourceRoot": "apps/application-system/form-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/application-system/form-e2e/cypress.json",
            "tsConfig": "apps/application-system/form-e2e/tsconfig.e2e.json",
            "devServerTarget": "application-system-form:serve",
            "baseUrl": "http://localhost:4242"
          },
          "configurations": {
            "production": {
              "devServerTarget": ""
            }
          }
        },
        "e2e-ci-skip": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn e2e-ci -n application-system-form-e2e -t react -p 4242 -d dist/apps/application-system/form -c"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/application-system/form-e2e/tsconfig.e2e.json"],
            "exclude": [
              "**/node_modules/**",
              "!apps/application-system/form-e2e/**/*"
            ]
          }
        }
      }
    },
    "application-template-api-modules": {
      "root": "libs/application/template-api-modules",
      "sourceRoot": "libs/application/template-api-modules/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/template-api-modules/tsconfig.lib.json",
              "libs/application/template-api-modules/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/template-api-modules/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/template-api-modules/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/template-api-modules"]
        }
      }
    },
    "application-template-loader": {
      "root": "libs/application/template-loader",
      "sourceRoot": "libs/application/template-loader/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/template-loader/tsconfig.lib.json",
              "libs/application/template-loader/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/template-loader/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/template-loader/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/template-loader"]
        }
      }
    },
    "application-templates-accident-notification": {
      "root": "libs/application/templates/accident-notification",
      "sourceRoot": "libs/application/templates/accident-notification/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/accident-notification/tsconfig.lib.json",
              "libs/application/templates/accident-notification/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/accident-notification/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/templates/accident-notification/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/libs/application/templates/accident-notification"
          ]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/accident-notification/src/lib/messages/*.ts'"
          }
        }
      }
    },
    "application-templates-children-residence-change": {
      "root": "libs/application/templates/family-matters/children-residence-change",
      "sourceRoot": "libs/application/templates/family-matters/children-residence-change/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/family-matters/children-residence-change/tsconfig.lib.json",
              "libs/application/templates/family-matters/children-residence-change/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/family-matters/children-residence-change/**/*"
            ]
          }
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/family-matters/children-residence-change/src/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "application-templates-complaints-to-althingi-ombudsman": {
      "root": "libs/application/templates/complaints-to-althingi-ombudsman",
      "sourceRoot": "libs/application/templates/complaints-to-althingi-ombudsman/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/complaints-to-althingi-ombudsman/tsconfig.lib.json",
              "libs/application/templates/complaints-to-althingi-ombudsman/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/complaints-to-althingi-ombudsman/**/*"
            ]
          }
        }
      }
    },
    "application-templates-criminal-record": {
      "root": "libs/application/templates/criminal-record",
      "sourceRoot": "libs/application/templates/criminal-record/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/criminal-record/tsconfig.lib.json",
              "libs/application/templates/criminal-record/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/criminal-record/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/application/templates/criminal-record"],
          "options": {
            "jestConfig": "libs/application/templates/criminal-record/jest.config.js",
            "passWithNoTests": true
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config libs/application/templates/criminal-record/codegen.yml"
          }
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/criminal-record/src/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "application-templates-data-protection-complaint": {
      "root": "libs/application/templates/data-protection-complaint",
      "sourceRoot": "libs/application/templates/data-protection-complaint/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/data-protection-complaint/tsconfig.spec.json",
              "libs/application/templates/data-protection-complaint/tsconfig.lib.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/data-protection-complaint/**/*"
            ]
          }
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/data-protection-complaint/src/**/*.{js,ts,tsx}'"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/templates/data-protection-complaint/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/libs/application/templates/data-protection-complaint"
          ]
        }
      }
    },
    "application-templates-document-provider-onboarding": {
      "root": "libs/application/templates/document-provider-onboarding",
      "sourceRoot": "libs/application/templates/document-provider-onboarding/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/document-provider-onboarding/tsconfig.lib.json",
              "libs/application/templates/document-provider-onboarding/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/document-provider-onboarding/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/templates/document-provider-onboarding/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/libs/application/templates/document-provider-onboarding"
          ]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node libs/localization/scripts/extract libs/application/templates/document-provider-onboarding/src/forms/messages.ts"
          }
        }
      }
    },
    "application-templates-driving-assessment-approval": {
      "root": "libs/application/templates/driving-assessment-approval",
      "sourceRoot": "libs/application/templates/driving-assessment-approval/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/driving-assessment-approval/tsconfig.lib.json",
              "libs/application/templates/driving-assessment-approval/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/driving-assessment-approval/**/*"
            ]
          }
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/driving-assessment-approval/src/**/*.{js,ts,tsx}'"
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config libs/application/templates/driving-assessment-approval/codegen.yml"
          }
        }
      }
    },
    "application-templates-driving-license": {
      "root": "libs/application/templates/driving-license",
      "sourceRoot": "libs/application/templates/driving-license/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/driving-license/tsconfig.lib.json",
              "libs/application/templates/driving-license/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/driving-license/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/templates/driving-license/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/templates/driving-license"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/driving-license/src/**/*.{js,ts,tsx}'"
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config libs/application/templates/driving-license/codegen.yml"
          }
        }
      }
    },
    "application-templates-family-matters-core": {
      "root": "libs/application/templates/family-matters/core",
      "sourceRoot": "libs/application/templates/family-matters/core/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/family-matters/core/tsconfig.lib.json",
              "libs/application/templates/family-matters/core/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/family-matters/core/**/*"
            ]
          }
        }
      }
    },
    "application-templates-funding-government-projects": {
      "root": "libs/application/templates/funding-government-projects",
      "sourceRoot": "libs/application/templates/funding-government-projects/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/funding-government-projects/tsconfig.lib.json",
              "libs/application/templates/funding-government-projects/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/funding-government-projects/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/application/templates/funding-government-projects"
          ],
          "options": {
            "jestConfig": "libs/application/templates/funding-government-projects/jest.config.js",
            "passWithNoTests": true
          }
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/funding-government-projects/src/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "application-templates-general-petition": {
      "root": "libs/application/templates/general-petition",
      "sourceRoot": "libs/application/templates/general-petition/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/general-petition/tsconfig.lib.json",
              "libs/application/templates/general-petition/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/general-petition/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/templates/general-petition/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/templates/general-petition"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/general-petition/src/lib/messages.ts'"
          }
        },
        "dev/init": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "yarn nx run application-system-api:dev-services",
              "yarn nx run application-system-api:migrate",
              "yarn nx run services-endorsements-api:migrate",
              "yarn nx run application-templates-general-petition:schemas/external-openapi-generator --skip-nx-cache",
              "yarn nx run application-templates-general-petition:schemas/codegen --skip-nx-cache",
              "yarn nx run application-system-api:schemas/build-openapi --skip-nx-cache",
              "yarn nx run api-domains-application:schemas/openapi-generator --skip-nx-cache"
            ],
            "parallel": false
          }
        },
        "dev": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "kubectl port-forward svc/socat-soffia 8443:443 -n socat &",
              "yarn start application-system-api $NX_OPTIONS &",
              "yarn start application-system-form $NX_OPTIONS &",
              "yarn start services-endorsements-api $NX_OPTIONS &",
              "yarn start api $NX_OPTIONS &"
            ],
            "parallel": true
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config libs/application/templates/general-petition/codegen.yml"
          }
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "nx run services-endorsements-api:schemas/build-openapi-internal $NX_OPTIONS",
              "nx run application-templates-general-petition:schemas/openapi-generator $NX_OPTIONS"
            ],
            "parallel": false
          }
        },
        "schemas/openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn openapi-generator -o libs/application/template-api-modules/src/lib/modules/templates/general-petition/gen/fetch/endorsements -i apps/services/endorsements/api/src/openapi.yaml --additional-properties=enumPropertyNaming=original"
          }
        }
      }
    },
    "application-templates-health-insurance": {
      "root": "libs/application/templates/health-insurance",
      "sourceRoot": "libs/application/templates/health-insurance/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/health-insurance/tsconfig.lib.json",
              "libs/application/templates/health-insurance/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/health-insurance/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/templates/health-insurance/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/templates/health-insurance"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract libs/application/templates/health-insurance/src/forms/messages.ts"
          }
        }
      }
    },
    "application-templates-institution-collaboration": {
      "root": "libs/application/templates/institution-collaboration",
      "sourceRoot": "libs/application/templates/institution-collaboration/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/institution-collaboration/tsconfig.lib.json",
              "libs/application/templates/institution-collaboration/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/institution-collaboration/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/templates/institution-collaboration/jest.config.js",
            "passWithNoTests": true
          }
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract libs/application/templates/institution-collaboration/src/lib/messages.ts"
          }
        }
      }
    },
    "application-templates-joint-custody-agreement": {
      "root": "libs/application/templates/family-matters/joint-custody-agreement",
      "sourceRoot": "libs/application/templates/family-matters/joint-custody-agreement/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/family-matters/joint-custody-agreement/tsconfig.lib.json",
              "libs/application/templates/family-matters/joint-custody-agreement/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/family-matters/joint-custody-agreement/**/*"
            ]
          }
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/family-matters/joint-custody-agreement/src/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "application-templates-login-service": {
      "root": "libs/application/templates/login-service",
      "sourceRoot": "libs/application/templates/login-service/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/application/templates/login-service/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/application/templates/login-service"],
          "options": {
            "jestConfig": "libs/application/templates/login-service/jest.config.js",
            "passWithNoTests": true
          }
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/login-service/src/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "application-templates-meta-application": {
      "root": "libs/application/templates/meta-application",
      "sourceRoot": "libs/application/templates/meta-application/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/meta-application/tsconfig.lib.json",
              "libs/application/templates/meta-application/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/meta-application/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/templates/meta-application/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/templates/meta-application"]
        }
      }
    },
    "application-templates-parental-leave": {
      "root": "libs/application/templates/parental-leave",
      "sourceRoot": "libs/application/templates/parental-leave/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/parental-leave/tsconfig.lib.json",
              "libs/application/templates/parental-leave/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/parental-leave/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/templates/parental-leave/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/templates/parental-leave"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract libs/application/templates/parental-leave/src/lib/messages.ts"
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config libs/application/templates/parental-leave/codegen.yml"
          }
        }
      }
    },
    "application-templates-passport": {
      "root": "libs/application/templates/passport",
      "sourceRoot": "libs/application/templates/passport/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/passport/tsconfig.lib.json",
              "libs/application/templates/passport/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/passport/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/templates/passport/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/templates/passport"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/passport/src/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "application-templates-public-debt-payment-plan": {
      "root": "libs/application/templates/public-debt-payment-plan",
      "sourceRoot": "libs/application/templates/public-debt-payment-plan/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/application/templates/public-debt-payment-plan/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/application/templates/public-debt-payment-plan"
          ],
          "options": {
            "jestConfig": "libs/application/templates/public-debt-payment-plan/jest.config.js",
            "passWithNoTests": true
          }
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/templates/public-debt-payment-plan/src/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "application-templates-reference-template": {
      "root": "libs/application/templates/reference-template",
      "sourceRoot": "libs/application/templates/reference-template/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/templates/reference-template/tsconfig.lib.json",
              "libs/application/templates/reference-template/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/templates/reference-template/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/templates/reference-template/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/templates/reference-template"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract libs/application/templates/reference-template/src/lib/messages.ts"
          }
        }
      }
    },
    "application-ui-components": {
      "root": "libs/application/ui-components",
      "sourceRoot": "libs/application/ui-components/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/ui-components/tsconfig.lib.json",
              "libs/application/ui-components/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/ui-components/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/ui-components/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/ui-components"]
        }
      }
    },
    "application-ui-fields": {
      "root": "libs/application/ui-fields",
      "sourceRoot": "libs/application/ui-fields/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/ui-fields/tsconfig.lib.json",
              "libs/application/ui-fields/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/application/ui-fields/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/ui-fields/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/ui-fields"]
        }
      }
    },
    "application-ui-shell": {
      "root": "libs/application/ui-shell",
      "sourceRoot": "libs/application/ui-shell/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/application/ui-shell/tsconfig.lib.json",
              "libs/application/ui-shell/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/application/ui-shell/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/application/ui-shell/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/application/ui-shell"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/application/ui-shell/src/{lib,components}/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "auth-admin-web": {
      "root": "apps/auth-admin-web",
      "sourceRoot": "apps/auth-admin-web",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "dist/apps/auth-admin-web",
            "commands": [
              "yarn nx build-next auth-admin-web",
              "yarn nx build-server auth-admin-web"
            ]
          },
          "configurations": {
            "production": {
              "args": "--prod"
            }
          }
        },
        "build-next": {
          "builder": "@nrwl/next:build",
          "options": {
            "root": "apps/auth-admin-web",
            "outputPath": "dist/apps/auth-admin-web"
          },
          "configurations": {
            "production": {}
          },
          "outputs": ["{options.outputPath}"]
        },
        "build-server": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/auth-admin-web",
            "main": "apps/auth-admin-web/server.ts",
            "tsConfig": "apps/auth-admin-web/tsconfig.json",
            "maxWorkers": 2,
            "assets": ["apps/auth-admin-web/next-modules"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "auth-admin-web:build-server"
          }
        },
        "export": {
          "builder": "@nrwl/next:export",
          "options": {
            "buildTarget": "auth-admin-web:build:production"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/auth-admin-web/tsconfig.app.json",
              "apps/auth-admin-web/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/auth-admin-web/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/auth-admin-web"]
        },
        "docker-next": {}
      }
    },
    "auth-admin-web-e2e": {
      "root": "apps/auth-admin-web-e2e",
      "sourceRoot": "apps/auth-admin-web-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/auth-admin-web-e2e/cypress.json",
            "tsConfig": "apps/auth-admin-web-e2e/tsconfig.e2e.json",
            "baseUrl": "http://localhost:4200",
            "devServerTarget": "auth-admin-web:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": ""
            }
          }
        },
        "e2e-ci": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn e2e-ci -n auth-admin-web-e2e -d dist/apps/auth-admin-web -c"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/auth-admin-web-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**"]
          }
        }
      }
    },
    "auth-api-lib": {
      "root": "libs/auth-api-lib",
      "sourceRoot": "libs/auth-api-lib/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/auth-api-lib/.eslintrc",
            "tsConfig": [
              "libs/auth-api-lib/tsconfig.lib.json",
              "libs/auth-api-lib/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/auth-api-lib/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/auth-api-lib/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/auth-api-lib"]
        }
      }
    },
    "auth-nest-tools": {
      "root": "libs/auth-nest-tools",
      "sourceRoot": "libs/auth-nest-tools/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/auth-nest-tools/tsconfig.lib.json",
              "libs/auth-nest-tools/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/auth-nest-tools/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/auth-nest-tools/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/auth-nest-tools"]
        }
      }
    },
    "auth-react": {
      "root": "libs/auth/react",
      "sourceRoot": "libs/auth/react/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/auth/react/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/auth/react"],
          "options": {
            "jestConfig": "libs/auth/react/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "auth-scopes": {
      "root": "libs/auth/scopes",
      "sourceRoot": "libs/auth/scopes/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/auth/scopes/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/auth/scopes"],
          "options": {
            "jestConfig": "libs/auth/scopes/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "cache": {
      "root": "libs/cache",
      "sourceRoot": "libs/cache/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/cache/tsconfig.lib.json",
              "libs/cache/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/cache/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/cache/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/cache"]
        }
      }
    },
    "clients-assets": {
      "root": "libs/clients/assets",
      "sourceRoot": "libs/clients/assets/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/assets/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/assets"],
          "options": {
            "jestConfig": "libs/clients/assets/jest.config.js",
            "passWithNoTests": true
          }
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn openapi-generator -o libs/clients/assets/gen/fetch -i libs/clients/assets/src/clientConfig.yaml"
          }
        }
      }
    },
    "clients-auth-public-api": {
      "root": "libs/clients/auth-public-api",
      "sourceRoot": "libs/clients/auth-public-api/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/auth-public-api/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/auth-public-api"],
          "options": {
            "jestConfig": "libs/clients/auth-public-api/jest.config.js",
            "passWithNoTests": true
          }
        },
        "schemas/openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "libs/clients/auth-public-api/gen",
            "command": "yarn openapi-generator -o libs/clients/auth-public-api/gen/fetch -i apps/services/auth-public-api/src/openapi.yaml"
          }
        }
      }
    },
    "clients-criminal-record": {
      "root": "libs/clients/criminal-record",
      "sourceRoot": "libs/clients/criminal-record/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/criminal-record/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/criminal-record"],
          "options": {
            "jestConfig": "libs/clients/criminal-record/jest.config.js",
            "passWithNoTests": true
          }
        },
        "update-openapi-document": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "curl -H \"X-Road-Client: $XROAD_CLIENT_ID\" http://localhost:8081/r1/IS-DEV/GOV/10005/Logreglan-Protected/getOpenAPI?serviceCode=Sakavottord-PDF-v2 -H 'Accept: application/json' > src/clientConfig.json"
            ],
            "parallel": false,
            "cwd": "libs/clients/criminal-record"
          }
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "yarn openapi-generator -o libs/clients/criminal-record/gen/fetch -i libs/clients/criminal-record/src/clientConfig.json"
            ]
          }
        }
      }
    },
    "clients-document-provider": {
      "root": "libs/clients/document-provider",
      "sourceRoot": "libs/clients/document-provider/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/document-provider/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/document-provider"],
          "options": {
            "jestConfig": "libs/clients/document-provider/jest.config.js",
            "passWithNoTests": true
          }
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn openapi-generator -o libs/clients/document-provider/gen/fetch -i libs/clients/document-provider/src/clientConfig.yaml"
          }
        }
      }
    },
    "clients-documents": {
      "root": "libs/clients/documents",
      "sourceRoot": "libs/clients/documents/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/documents/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/documents"],
          "options": {
            "jestConfig": "libs/clients/documents/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "clients-driving-license": {
      "root": "libs/clients/driving-license",
      "sourceRoot": "libs/clients/driving-license/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/driving-license/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/driving-license"],
          "options": {
            "jestConfig": "libs/clients/driving-license/jest.config.js",
            "passWithNoTests": true
          }
        },
        "update-openapi-document": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "[[ '{args.apiVersion}' =~ v1|v2 ]] && >&2 echo \"Missing required --apiVersion, only v1 or v2 are valid\"",
              "curl -H \"X-Road-Client: $XROAD_CLIENT_ID\" -H \"SECRET: $DRIVING_LICENSE_SECRET\" http://localhost:8081/r1/IS-DEV/GOV/10005/Logreglan-Protected/getOpenAPI?serviceCode=RafraentOkuskirteini-{args.apiVersion} -H 'Accept: application/json' > src/{args.apiVersion}/clientConfig.json",
              "jq '.components.schemas.ProblemDetails.additionalProperties = false' src/{args.apiVersion}/clientConfig.json > _.tmp && mv _.tmp src/{args.apiVersion}/clientConfig.json",
              "jq '.paths[].post.requestBody.content |= (select(. != null) | with_entries(select(.key == \"application/json\")))' src/{args.apiVersion}/clientConfig.json > _.tmp && mv _.tmp src/{args.apiVersion}/clientConfig.json"
            ],
            "parallel": false,
            "cwd": "libs/clients/driving-license"
          }
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "yarn openapi-generator -o libs/clients/driving-license/gen/fetch/v1 -i libs/clients/driving-license/src/v1/clientConfig.json",
              "yarn openapi-generator -o libs/clients/driving-license/gen/fetch/v2 -i libs/clients/driving-license/src/v2/clientConfig.json"
            ]
          }
        }
      }
    },
    "clients-finance": {
      "root": "libs/clients/finance",
      "sourceRoot": "libs/clients/finance/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/finance/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/finance"],
          "options": {
            "jestConfig": "libs/clients/finance/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "clients-health-insurance-v2": {
      "root": "libs/clients/health-insurance-v2",
      "sourceRoot": "libs/clients/health-insurance-v2/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/health-insurance-v2/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/health-insurance-v2"],
          "options": {
            "jestConfig": "libs/clients/health-insurance-v2/jest.config.js",
            "passWithNoTests": true
          }
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn openapi-generator -o libs/clients/health-insurance-v2/gen/fetch -i libs/clients/health-insurance-v2/src/openapi.yml"
          }
        }
      }
    },
    "clients-islykill": {
      "root": "libs/clients/islykill",
      "sourceRoot": "libs/clients/islykill/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/clients/islykill/tsconfig.lib.json",
              "libs/clients/islykill/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/clients/islykill/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/clients/islykill/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/clients/islykill"]
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn openapi-generator -o libs/clients/islykill/gen/fetch -i libs/clients/islykill/src/clientConfig.yaml"
          }
        }
      }
    },
    "clients-middlewares": {
      "root": "libs/clients/middlewares",
      "sourceRoot": "libs/clients/middlewares/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/middlewares/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/middlewares"],
          "options": {
            "jestConfig": "libs/clients/middlewares/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "clients-mms": {
      "root": "libs/clients/mms",
      "sourceRoot": "libs/clients/mms/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/mms/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/mms"],
          "options": {
            "jestConfig": "libs/clients/mms/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "clients-national-registry-v1": {
      "root": "libs/clients/national-registry/v1",
      "sourceRoot": "libs/clients/national-registry/v1/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/national-registry/v1/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/national-registry/v1"],
          "options": {
            "jestConfig": "libs/clients/national-registry/v1/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "clients-national-registry-v2": {
      "root": "libs/clients/national-registry/v2",
      "sourceRoot": "libs/clients/national-registry/v2/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/national-registry/v2/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/national-registry/v2"],
          "options": {
            "jestConfig": "libs/clients/national-registry/v2/jest.config.js",
            "passWithNoTests": true
          }
        },
        "update-openapi-document": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "curl -H \"X-Road-Client: $XROAD_CLIENT_ID\" http://localhost:8081/r1/IS-DEV/GOV/10001/SKRA-Protected/getOpenAPI?serviceCode=Einstaklingar-v1 -H 'Accept: application/json' > src/clientConfig.json",
              "jq '.components.schemas.ProblemDetails |= (.additionalProperties = false | .properties.extensions.additionalProperties = false)' src/clientConfig.json > _.tmp && mv _.tmp src/clientConfig.json",
              "jq '.paths[][].parameters |= map(select(.name != \"X-Road-Client\"))' src/clientConfig.json > _.tmp && mv _.tmp src/clientConfig.json"
            ],
            "parallel": false,
            "cwd": "libs/clients/national-registry/v2"
          }
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn openapi-generator -o libs/clients/national-registry/v2/gen/fetch -i libs/clients/national-registry/v2/src/clientConfig.json"
          }
        }
      }
    },
    "clients-payment": {
      "root": "libs/clients/payment",
      "sourceRoot": "libs/clients/payment/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/clients/payment/tsconfig.lib.json",
              "libs/clients/payment/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/clients/payment/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/clients/payment/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/clients/payment"]
        }
      }
    },
    "clients-payment-schedule": {
      "root": "libs/clients/payment-schedule",
      "sourceRoot": "libs/clients/payment-schedule/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/clients/payment-schedule/tsconfig.lib.json",
              "libs/clients/payment-schedule/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/clients/payment-schedule/**/*"
            ]
          }
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn openapi-generator -o libs/clients/payment-schedule/src/gen/fetch/ -i libs/clients/payment-schedule/src/openapi.yml"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/payment-schedule"],
          "options": {
            "jestConfig": "libs/clients/payment-schedule/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "clients-regulations": {
      "root": "libs/clients/regulations",
      "sourceRoot": "libs/clients/regulations/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/clients/regulations/tsconfig.lib.json",
              "libs/clients/regulations/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/clients/regulations/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/clients/regulations/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/clients/regulations"]
        }
      }
    },
    "clients-rsk-v1": {
      "root": "libs/clients/rsk/v1",
      "sourceRoot": "libs/clients/rsk/v1/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/clients/rsk/v1/tsconfig.lib.json",
              "libs/clients/rsk/v1/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/clients/rsk/v1/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/clients/rsk/v1/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/clients/rsk/v1"]
        }
      }
    },
    "clients-rsk-v2": {
      "root": "libs/clients/rsk/v2",
      "sourceRoot": "libs/clients/rsk/v2/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/rsk/v2/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/rsk/v2"],
          "options": {
            "jestConfig": "libs/clients/rsk/v2/jest.config.js",
            "passWithNoTests": true
          }
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn openapi-generator -o libs/clients/rsk/v2/gen/fetch -i libs/clients/rsk/v2/src/companyregistryapi_openapi3.yml"
          }
        }
      }
    },
    "clients-vmst": {
      "root": "libs/clients/vmst",
      "sourceRoot": "libs/clients/vmst/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/clients/vmst/tsconfig.lib.json",
              "libs/clients/vmst/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/clients/vmst/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/clients/vmst/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/clients/vmst"]
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn openapi-generator -o libs/clients/vmst/gen/fetch -i libs/clients/vmst/src/clientConfig.yaml"
          }
        }
      }
    },
    "clients-zendesk": {
      "root": "libs/clients/zendesk",
      "sourceRoot": "libs/clients/zendesk/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/clients/zendesk/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/clients/zendesk"],
          "options": {
            "jestConfig": "libs/clients/zendesk/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "cms": {
      "root": "libs/cms",
      "sourceRoot": "libs/cms/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/cms/tsconfig.lib.json",
              "libs/cms/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/cms/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/cms/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/cms"]
        }
      }
    },
    "cms-translations": {
      "root": "libs/cms-translations",
      "sourceRoot": "libs/cms-translations/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/cms-translations/tsconfig.lib.json",
              "libs/cms-translations/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/cms-translations/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/cms-translations/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/cms-translations"]
        }
      }
    },
    "content-search-index-manager": {
      "root": "libs/content-search-index-manager",
      "sourceRoot": "libs/content-search-index-manager/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/content-search-index-manager/tsconfig.lib.json",
              "libs/content-search-index-manager/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/content-search-index-manager/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/content-search-index-manager/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/content-search-index-manager"]
        }
      }
    },
    "content-search-indexer": {
      "root": "libs/content-search-indexer",
      "sourceRoot": "libs/content-search-indexer/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/content-search-indexer/tsconfig.lib.json",
              "libs/content-search-indexer/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/content-search-indexer/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/content-search-indexer/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/content-search-indexer"]
        }
      }
    },
    "content-search-indexer-types": {
      "root": "libs/content-search-indexer/types",
      "sourceRoot": "libs/content-search-indexer/types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/content-search-indexer/types/tsconfig.lib.json",
              "libs/content-search-indexer/types/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/content-search-indexer/types/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/content-search-indexer/types/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/content-search-indexer/types"]
        }
      }
    },
    "content-search-metrics": {
      "root": "libs/content-search-metrics",
      "sourceRoot": "libs/content-search-metrics/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/content-search-metrics/tsconfig.lib.json",
              "libs/content-search-metrics/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/content-search-metrics/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/content-search-metrics/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/content-search-metrics"]
        }
      }
    },
    "content-search-toolkit": {
      "root": "libs/content-search-toolkit",
      "sourceRoot": "libs/content-search-toolkit/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/content-search-toolkit/tsconfig.lib.json",
              "libs/content-search-toolkit/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/content-search-toolkit/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/content-search-toolkit/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/content-search-toolkit"]
        }
      }
    },
    "contentful-mideind-extension": {
      "root": "libs/contentful-extensions/mideind-translation",
      "sourceRoot": "libs/contentful-extensions/mideind-translation/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/contentful-extensions/mideind-translation/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/contentful-mideind-extension"]
        }
      }
    },
    "contentful-parent-slug-extension": {
      "root": "libs/contentful-extensions/parent-slug",
      "sourceRoot": "libs/contentful-extensions/parent-slug/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/contentful-extensions/parent-slug/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/contentful-parent-slug-extension"]
        }
      }
    },
    "contentful-translation-extension": {
      "root": "libs/contentful-extensions/translation",
      "sourceRoot": "libs/contentful-extensions/translation/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/contentful-extensions/translation/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/contentful-translation-extension"]
        },
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "contentful-extension-scripts start --input libs/contentful-extensions/translation --output dist/contentful-translation-extension --id translation-extension-v2 --name translation-extension-v2 --space-id 8k0h54kbe6bj --field-types Object --mt {args.token}"
          }
        },
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "dist/contentful-translation-extension",
            "command": "contentful-extension-scripts build --input libs/contentful-extensions/translation --output dist/contentful-translation-extension"
          },
          "configurations": {
            "production": {}
          }
        },
        "docker-static": {}
      }
    },
    "dokobit-signing": {
      "root": "libs/dokobit-signing",
      "sourceRoot": "libs/dokobit-signing/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/dokobit-signing/tsconfig.lib.json",
              "libs/dokobit-signing/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/dokobit-signing/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/dokobit-signing/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/dokobit-signing"]
        }
      }
    },
    "download-service": {
      "root": "apps/download-service",
      "sourceRoot": "apps/download-service/src",
      "projectType": "application",
      "prefix": "download-service",
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/download-service",
            "main": "apps/download-service/src/main.ts",
            "tsConfig": "apps/download-service/tsconfig.app.json",
            "assets": ["apps/download-service/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "download-service:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/download-service/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/download-service"],
          "options": {
            "jestConfig": "apps/download-service/jest.config.js",
            "passWithNoTests": true
          }
        },
        "docker-express": {}
      }
    },
    "email-service": {
      "root": "libs/email-service",
      "sourceRoot": "libs/email-service/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/email-service/tsconfig.lib.json",
              "libs/email-service/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/email-service/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/email-service/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/email-service"]
        }
      }
    },
    "feature-flags": {
      "root": "libs/feature-flags",
      "sourceRoot": "libs/feature-flags/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/feature-flags/tsconfig.lib.json",
              "libs/feature-flags/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/feature-flags/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/feature-flags/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/feature-flags"]
        }
      }
    },
    "file-storage": {
      "root": "libs/file-storage",
      "sourceRoot": "libs/file-storage/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/file-storage/tsconfig.lib.json",
              "libs/file-storage/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/file-storage/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/file-storage/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/file-storage"]
        }
      }
    },
    "financial-aid-api": {
      "root": "apps/financial-aid/api",
      "sourceRoot": "apps/financial-aid/api/src",
      "projectType": "application",
      "prefix": "financial-aid-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/financial-aid/api",
            "main": "apps/financial-aid/api/src/main.ts",
            "tsConfig": "apps/financial-aid/api/tsconfig.app.json",
            "assets": [],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "financial-aid-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/financial-aid/api/tsconfig.app.json",
              "apps/financial-aid/api/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/financial-aid/api/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/financial-aid/api/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/financial-aid/api"]
        },
        "schemas/build-graphql-schema": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P apps/financial-aid/api/tsconfig.json scripts/build-graphql-schema.ts apps/financial-aid/api/src/app/app.module"
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config apps/financial-aid/codegen.yml"
          }
        },
        "docker-express": {}
      }
    },
    "financial-aid-backend": {
      "root": "apps/financial-aid/backend",
      "sourceRoot": "apps/financial-aid/backend/src",
      "projectType": "application",
      "prefix": "financial-aid-backend",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/financial-aid/backend",
            "main": "apps/financial-aid/backend/src/main.ts",
            "tsConfig": "apps/financial-aid/backend/tsconfig.app.json",
            "assets": [
              {
                "glob": "*",
                "input": "apps/financial-aid/backend/migrations",
                "output": "./migrations"
              },
              {
                "glob": ".sequelizerc",
                "input": "apps/financial-aid/backend",
                "output": "./"
              },
              {
                "glob": "sequelize.config.js",
                "input": "apps/financial-aid/backend",
                "output": "./"
              }
            ],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "financial-aid-backend:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/financial-aid/backend/tsconfig.app.json",
              "apps/financial-aid/backend/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/financial-aid/backend/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/financial-aid/backend/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/financial-aid/backend"]
        },
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d",
            "cwd": "apps/financial-aid/backend"
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/financial-aid/backend/src/openapi.yaml",
            "command": "yarn ts-node -P apps/financial-aid/backend/tsconfig.app.json apps/financial-aid/backend/src/buildOpenApi.ts"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli db:migrate",
            "cwd": "apps/financial-aid/backend"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli migration:generate --name $(whoami)",
            "cwd": "apps/financial-aid/backend"
          }
        },
        "seed": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli db:seed:all",
            "cwd": "apps/financial-aid/backend"
          }
        },
        "docker-express": {}
      }
    },
    "financial-aid-shared": {
      "root": "libs/financial-aid/shared",
      "sourceRoot": "libs/financial-aid/shared/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/financial-aid/shared/tsconfig.lib.json",
              "libs/financial-aid/shared/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/financial-aid/shared/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/financial-aid/shared/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/financial-aid/shared"]
        }
      }
    },
    "financial-aid-web-osk": {
      "root": "apps/financial-aid/web-osk",
      "sourceRoot": "apps/financial-aid/web-osk",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "dist/apps/financial-aid/web-osk",
            "commands": [
              "yarn nx build-next financial-aid-web-osk",
              "yarn nx build-server financial-aid-web-osk"
            ]
          },
          "configurations": {
            "production": {
              "args": "--prod"
            }
          }
        },
        "build-next": {
          "builder": "@nrwl/next:build",
          "options": {
            "root": "apps/financial-aid/web-osk",
            "outputPath": "dist/apps/financial-aid/web-osk"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/financial-aid/web-osk/src/environments/environment.ts",
                  "with": "apps/financial-aid/web-osk/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "build-server": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/financial-aid/web-osk",
            "main": "apps/financial-aid/web-osk/server.ts",
            "tsConfig": "apps/financial-aid/web-osk/tsconfig.json",
            "maxWorkers": 2,
            "assets": ["apps/financial-aid/web-osk/next-modules"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "financial-aid-web-osk:build-server"
          }
        },
        "export": {
          "builder": "@nrwl/next:export",
          "options": {
            "buildTarget": "financial-aid-web-osk:build:production"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/financial-aid/web-osk/tsconfig.json",
              "apps/financial-aid/web-osk/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/financial-aid/web-osk/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/financial-aid/web-osk/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/financial-aid/web-osk"]
        },
        "docker-next": {}
      }
    },
    "financial-aid-web-osk-e2e": {
      "root": "apps/financial-aid/web-osk-e2e",
      "sourceRoot": "apps/financial-aid/web-osk-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/financial-aid/web-osk-e2e/cypress.json",
            "tsConfig": "apps/financial-aid/web-osk-e2e/tsconfig.e2e.json",
            "devServerTarget": "",
            "baseUrl": "http://localhost:4200"
          },
          "configurations": {
            "production": {
              "devServerTarget": ""
            }
          }
        },
        "e2e-ci": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "cypressConfig": "apps/financial-aid/web-osk-e2e/cypress.json",
            "command": "yarn e2e-ci -n financial-aid-web-osk-e2e -c -d dist/apps/financial-aid/web-osk"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/financial-aid/web-osk-e2e/tsconfig.e2e.json"],
            "exclude": [
              "**/node_modules/**",
              "!apps/financial-aid/web-osk-e2e/**/*"
            ]
          }
        }
      }
    },
    "financial-aid-web-veita": {
      "root": "apps/financial-aid/web-veita",
      "sourceRoot": "apps/financial-aid/web-veita",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "dist/apps/financial-aid/web-veita",
            "commands": [
              "yarn nx build-next financial-aid-web-veita",
              "yarn nx build-server financial-aid-web-veita"
            ]
          },
          "configurations": {
            "production": {
              "args": "--prod"
            }
          }
        },
        "build-next": {
          "builder": "@nrwl/next:build",
          "options": {
            "root": "apps/financial-aid/web-veita",
            "outputPath": "dist/apps/financial-aid/web-veita"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/financial-aid/web-veita/src/environments/environment.ts",
                  "with": "apps/financial-aid/web-veita/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "build-server": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/financial-aid/web-veita",
            "main": "apps/financial-aid/web-veita/server.ts",
            "tsConfig": "apps/financial-aid/web-veita/tsconfig.json",
            "maxWorkers": 2,
            "assets": ["apps/financial-aid/web-veita/next-modules"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "financial-aid-web-veita:build-server"
          }
        },
        "export": {
          "builder": "@nrwl/next:export",
          "options": {
            "buildTarget": "financial-aid-web-veita:build:production"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/financial-aid/web-veita/tsconfig.json",
              "apps/financial-aid/web-veita/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/financial-aid/web-veita/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/financial-aid/web-veita/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/financial-aid/web-veita"]
        },
        "docker-next": {}
      }
    },
    "github-actions-cache": {
      "root": "apps/github-actions-cache",
      "sourceRoot": "apps/github-actions-cache/src",
      "projectType": "application",
      "prefix": "github-actions-cache",
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/github-actions-cache",
            "main": "apps/github-actions-cache/src/main.ts",
            "tsConfig": "apps/github-actions-cache/tsconfig.app.json",
            "assets": ["apps/github-actions-cache/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "github-actions-cache:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/github-actions-cache/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/github-actions-cache"],
          "options": {
            "jestConfig": "apps/github-actions-cache/jest.config.js",
            "passWithNoTests": true
          }
        },
        "docker-express": {}
      }
    },
    "gjafakort-api": {
      "root": "apps/gjafakort/api",
      "sourceRoot": "apps/gjafakort/api/src",
      "projectType": "application",
      "prefix": "gjafakort-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/gjafakort/api",
            "main": "apps/gjafakort/api/src/main.ts",
            "tsConfig": "apps/gjafakort/api/tsconfig.app.json",
            "assets": [],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "gjafakort-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/gjafakort/api/tsconfig.app.json",
              "apps/gjafakort/api/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/gjafakort/api/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/gjafakort/api/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/gjafakort/api"]
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config apps/gjafakort/codegen.yml"
          }
        },
        "docker-express": {}
      }
    },
    "gjafakort-application": {
      "root": "apps/gjafakort/application",
      "sourceRoot": "apps/gjafakort/application/src",
      "projectType": "application",
      "prefix": "gjafakort-application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/gjafakort/application",
            "main": "apps/gjafakort/application/src/main.ts",
            "tsConfig": "apps/gjafakort/application/tsconfig.app.json",
            "assets": [
              {
                "glob": "*sequelize*",
                "input": "apps/gjafakort/application",
                "output": "./"
              },
              {
                "glob": "migrations/**",
                "input": "apps/gjafakort/application",
                "output": "./"
              },
              {
                "glob": ".sequelizerc",
                "input": "apps/gjafakort/application",
                "output": "./"
              }
            ],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "gjafakort-application:build"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli db:migrate",
            "cwd": "apps/gjafakort/application"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli migration:generate --name $(whoami)",
            "cwd": "apps/gjafakort/application"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/gjafakort/application/tsconfig.app.json",
              "apps/gjafakort/application/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/gjafakort/application/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/gjafakort/application/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/gjafakort/application"]
        },
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d",
            "cwd": "apps/gjafakort/application"
          }
        },
        "docker-express": {}
      }
    },
    "gjafakort-consts": {
      "root": "libs/gjafakort/consts",
      "sourceRoot": "libs/gjafakort/consts/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/gjafakort/consts/tsconfig.lib.json",
              "libs/gjafakort/consts/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/gjafakort/consts/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/gjafakort/consts/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/gjafakort/consts"]
        }
      }
    },
    "gjafakort-queue-listener": {
      "root": "apps/gjafakort/queue-listener",
      "sourceRoot": "apps/gjafakort/queue-listener/src",
      "projectType": "application",
      "prefix": "gjafakort-queue-listener",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/gjafakort/queue-listener",
            "main": "apps/gjafakort/queue-listener/src/main.ts",
            "tsConfig": "apps/gjafakort/queue-listener/tsconfig.app.json",
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "gjafakort-queue-listener:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/gjafakort/queue-listener/tsconfig.app.json",
              "apps/gjafakort/queue-listener/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/gjafakort/queue-listener/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/gjafakort/queue-listener/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/gjafakort/queue-listener"]
        },
        "docker-express": {}
      }
    },
    "gjafakort-types": {
      "root": "libs/gjafakort/types",
      "sourceRoot": "libs/gjafakort/types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/gjafakort/types/tsconfig.lib.json",
              "libs/gjafakort/types/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/gjafakort/types/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/gjafakort/types/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/gjafakort/types"]
        }
      }
    },
    "gjafakort-web": {
      "root": "apps/gjafakort/web",
      "sourceRoot": "apps/gjafakort/web",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "dist/apps/gjafakort/web",
            "commands": [
              "yarn nx build-next gjafakort-web",
              "yarn nx build-server gjafakort-web"
            ]
          },
          "configurations": {
            "production": {
              "args": "--prod"
            }
          }
        },
        "build-next": {
          "builder": "@nrwl/next:build",
          "options": {
            "root": "apps/gjafakort/web",
            "outputPath": "dist/apps/gjafakort/web"
          },
          "configurations": {
            "production": {}
          },
          "outputs": ["{options.outputPath}"]
        },
        "build-server": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/gjafakort/web",
            "main": "apps/gjafakort/web/server.ts",
            "tsConfig": "apps/gjafakort/web/tsconfig.json",
            "maxWorkers": 2,
            "assets": ["apps/gjafakort/web/next-modules"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "translations": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "quicktype is.json -o translation.d.ts --top-level Translation",
            "cwd": "apps/gjafakort/web/i18n/locales"
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "gjafakort-web:build-server"
          }
        },
        "export": {
          "builder": "@nrwl/next:export",
          "options": {
            "buildTarget": "gjafakort-web:build:production"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/gjafakort/web/tsconfig.json",
              "apps/gjafakort/web/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/gjafakort/web/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/gjafakort/web/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/gjafakort/web"]
        },
        "docker-next": {}
      }
    },
    "gjafakort-web-e2e": {
      "root": "apps/gjafakort/web-e2e",
      "sourceRoot": "apps/gjafakort/web-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/gjafakort/web-e2e/cypress.json",
            "tsConfig": "apps/gjafakort/web-e2e/tsconfig.e2e.json",
            "baseUrl": "http://localhost:4200",
            "devServerTarget": "gjafakort-web:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": ""
            }
          }
        },
        "e2e-ci": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn e2e-ci -n gjafakort-web-e2e -d dist/apps/gjafakort/web -c"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/gjafakort/web-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/gjafakort/web-e2e/**/*"]
          }
        }
      }
    },
    "health-insurance": {
      "root": "libs/health-insurance",
      "sourceRoot": "libs/health-insurance/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/health-insurance/tsconfig.lib.json",
              "libs/health-insurance/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/health-insurance/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/health-insurance/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/health-insurance"]
        }
      }
    },
    "icelandic-names-registry-backend": {
      "root": "apps/icelandic-names-registry/backend",
      "sourceRoot": "apps/icelandic-names-registry/backend/src",
      "projectType": "application",
      "prefix": "icelandic-names-registry-backend",
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/icelandic-names-registry/backend",
            "main": "apps/icelandic-names-registry/backend/src/main.ts",
            "tsConfig": "apps/icelandic-names-registry/backend/tsconfig.app.json",
            "webpackConfig": "apps/icelandic-names-registry/backend/webpack.config.js",
            "assets": [
              {
                "glob": "*sequelize*",
                "input": "apps/icelandic-names-registry/backend",
                "output": "./"
              },
              {
                "glob": "migrations/**",
                "input": "apps/icelandic-names-registry/backend",
                "output": "./"
              },
              {
                "glob": "seeders/**",
                "input": "apps/icelandic-names-registry/backend",
                "output": "./"
              },
              {
                "glob": "data/**",
                "input": "apps/icelandic-names-registry/backend",
                "output": "./"
              },
              {
                "glob": ".sequelizerc",
                "input": "apps/icelandic-names-registry/backend",
                "output": "./"
              }
            ],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "icelandic-names-registry-backend:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/icelandic-names-registry/backend/**/*.ts"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/icelandic-names-registry/backend"],
          "options": {
            "jestConfig": "apps/icelandic-names-registry/backend/jest.config.js",
            "passWithNoTests": true
          }
        },
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d",
            "cwd": "apps/icelandic-names-registry/backend"
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/icelandic-names-registry/backend/src/openapi.yaml",
            "command": "yarn ts-node -P apps/icelandic-names-registry/backend/tsconfig.app.json apps/icelandic-names-registry/backend/src/buildOpenApi.ts"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli db:migrate",
            "cwd": "apps/icelandic-names-registry/backend"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli migration:generate --name $(whoami)",
            "cwd": "apps/icelandic-names-registry/backend"
          }
        },
        "seed": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli db:seed:all",
            "cwd": "apps/icelandic-names-registry/backend"
          }
        },
        "docker-express": {}
      }
    },
    "icelandic-names-registry-types": {
      "root": "libs/icelandic-names-registry/types",
      "sourceRoot": "libs/icelandic-names-registry/types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/icelandic-names-registry/types/tsconfig.lib.json",
              "libs/icelandic-names-registry/types/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/icelandic-names-registry/types/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/icelandic-names-registry/types/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/icelandic-names-registry/types"]
        }
      }
    },
    "infra-express-server": {
      "root": "libs/infra-express-server",
      "sourceRoot": "libs/infra-express-server/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/infra-express-server/tsconfig.lib.json",
              "libs/infra-express-server/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/infra-express-server/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/infra-express-server/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/infra-express-server"]
        }
      }
    },
    "infra-metrics": {
      "root": "libs/infra-metrics",
      "sourceRoot": "libs/infra-metrics/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/infra-metrics/tsconfig.lib.json",
              "libs/infra-metrics/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/infra-metrics/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/infra-metrics/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/infra-metrics"]
        }
      }
    },
    "infra-monitoring": {
      "root": "libs/infra-monitoring",
      "sourceRoot": "libs/infra-monitoring/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/infra-monitoring/tsconfig.lib.json",
              "libs/infra-monitoring/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/infra-monitoring/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/infra-monitoring/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/infra-monitoring"]
        }
      }
    },
    "infra-nest-server": {
      "root": "libs/infra-nest-server",
      "sourceRoot": "libs/infra-nest-server/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/infra-nest-server/tsconfig.lib.json",
              "libs/infra-nest-server/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/infra-nest-server/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/infra-nest-server/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/infra-nest-server"]
        }
      }
    },
    "infra-next-server": {
      "root": "libs/infra-next-server",
      "sourceRoot": "libs/infra-next-server/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/infra-next-server/tsconfig.lib.json",
              "libs/infra-next-server/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/infra-next-server/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/infra-next-server/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/infra-next-server"]
        }
      }
    },
    "infra-tracing": {
      "root": "libs/infra-tracing",
      "sourceRoot": "libs/infra-tracing/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/infra-tracing/tsconfig.lib.json",
              "libs/infra-tracing/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/infra-tracing/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/infra-tracing/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/infra-tracing"]
        }
      }
    },
    "island-ui-contentful": {
      "root": "libs/island-ui/contentful",
      "sourceRoot": "libs/island-ui/contentful/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/island-ui/contentful/tsconfig.lib.json",
              "libs/island-ui/contentful/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/island-ui/contentful/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/island-ui/contentful/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/island-ui/contentful"]
        }
      }
    },
    "island-ui-core": {
      "root": "libs/island-ui/core",
      "sourceRoot": "libs/island-ui/core/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/island-ui/core/tsconfig.lib.json",
              "libs/island-ui/core/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/island-ui/core/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/island-ui/core/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/island-ui/core"]
        }
      }
    },
    "island-ui-fonts": {
      "root": "libs/island-ui/fonts",
      "projectType": "library",
      "architect": {}
    },
    "island-ui-storybook": {
      "root": "libs/island-ui/storybook",
      "sourceRoot": "libs/island-ui/storybook/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["libs/island-ui/storybook/tsconfig.lib.json"],
            "exclude": ["**/node_modules/**", "!libs/island-ui/storybook/**/*"]
          }
        },
        "serve": {
          "builder": "@nrwl/storybook:storybook",
          "options": {
            "uiFramework": "@storybook/react",
            "port": 4400,
            "config": {
              "configFolder": "libs/island-ui/storybook/config"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build": {
          "builder": "@nrwl/storybook:build",
          "options": {
            "uiFramework": "@storybook/react",
            "outputPath": "dist/storybook/island-ui",
            "config": {
              "configFolder": "libs/island-ui/storybook/config"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            },
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "docker-static": {}
      }
    },
    "island-ui-theme": {
      "root": "libs/island-ui/theme",
      "sourceRoot": "libs/island-ui/theme/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/island-ui/theme/tsconfig.lib.json",
              "libs/island-ui/theme/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/island-ui/theme/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/island-ui/theme/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/island-ui/theme"]
        }
      }
    },
    "island-ui-utils": {
      "root": "libs/island-ui/utils",
      "sourceRoot": "libs/island-ui/utils/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/island-ui/utils/tsconfig.lib.json",
              "libs/island-ui/utils/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/island-ui/utils/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/island-ui/utils/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/island-ui/utils"]
        }
      }
    },
    "island-ui-vanilla-extract-utils": {
      "root": "libs/island-ui/vanilla-extract-utils",
      "sourceRoot": "libs/island-ui/vanilla-extract-utils/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/island-ui/vanilla-extract-utils/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/island-ui/vanilla-extract-utils"],
          "options": {
            "jestConfig": "libs/island-ui/vanilla-extract-utils/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "judicial-system-api": {
      "root": "apps/judicial-system/api",
      "sourceRoot": "apps/judicial-system/api/src",
      "projectType": "application",
      "prefix": "judicial-system-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/judicial-system/api",
            "main": "apps/judicial-system/api/src/main.ts",
            "tsConfig": "apps/judicial-system/api/tsconfig.app.json",
            "assets": [],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "judicial-system-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/judicial-system/api/tsconfig.app.json",
              "apps/judicial-system/api/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/judicial-system/api/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/judicial-system/api/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/judicial-system/api"]
        },
        "schemas/build-graphql-schema": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P apps/judicial-system/api/tsconfig.json scripts/build-graphql-schema.ts apps/judicial-system/api/src/app/app.module"
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config apps/judicial-system/codegen.yml"
          }
        },
        "docker-express": {}
      }
    },
    "judicial-system-audit-trail": {
      "root": "libs/judicial-system/audit-trail",
      "sourceRoot": "libs/judicial-system/audit-trail/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/judicial-system/audit-trail/tsconfig.lib.json",
              "libs/judicial-system/audit-trail/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/judicial-system/audit-trail/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/judicial-system/audit-trail/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/judicial-system/audit-trail"]
        }
      }
    },
    "judicial-system-auth": {
      "root": "libs/judicial-system/auth",
      "sourceRoot": "libs/judicial-system/auth/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/judicial-system/auth/tsconfig.lib.json",
              "libs/judicial-system/auth/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/judicial-system/auth/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/judicial-system/auth/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/judicial-system/auth"]
        }
      }
    },
    "judicial-system-backend": {
      "root": "apps/judicial-system/backend",
      "sourceRoot": "apps/judicial-system/backend/src",
      "projectType": "application",
      "prefix": "judicial-system-backend",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/judicial-system/backend",
            "main": "apps/judicial-system/backend/src/main.ts",
            "tsConfig": "apps/judicial-system/backend/tsconfig.app.json",
            "assets": [
              {
                "glob": "*",
                "input": "apps/judicial-system/backend/migrations",
                "output": "./migrations"
              },
              {
                "glob": "*",
                "input": "apps/judicial-system/backend/seeders",
                "output": "./seeders"
              },
              {
                "glob": ".sequelizerc",
                "input": "apps/judicial-system/backend",
                "output": "./"
              },
              {
                "glob": "sequelize.config.js",
                "input": "apps/judicial-system/backend",
                "output": "./"
              }
            ],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "judicial-system-backend:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/judicial-system/backend/tsconfig.app.json",
              "apps/judicial-system/backend/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/judicial-system/backend/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/judicial-system/backend/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/judicial-system/backend"]
        },
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d",
            "cwd": "apps/judicial-system/backend"
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/judicial-system/backend/src/openapi.yaml",
            "command": "yarn ts-node -P apps/judicial-system/backend/tsconfig.app.json apps/judicial-system/backend/src/buildOpenApi.ts"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli db:migrate",
            "cwd": "apps/judicial-system/backend"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli migration:generate --name $(whoami)",
            "cwd": "apps/judicial-system/backend"
          }
        },
        "seed": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli db:seed:all",
            "cwd": "apps/judicial-system/backend"
          }
        },
        "docker-express": {},
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'apps/judicial-system/backend/src/app/messages/**/*.ts'"
          }
        }
      }
    },
    "judicial-system-consts": {
      "root": "libs/judicial-system/consts",
      "sourceRoot": "libs/judicial-system/consts/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/judicial-system/consts/tsconfig.lib.json",
              "libs/judicial-system/consts/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/judicial-system/consts/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/judicial-system/consts/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/judicial-system/consts"]
        }
      }
    },
    "judicial-system-court-client": {
      "root": "libs/judicial-system/court-client",
      "sourceRoot": "libs/judicial-system/court-client/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/judicial-system/court-client/tsconfig.lib.json",
              "libs/judicial-system/court-client/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/judicial-system/court-client/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/judicial-system/court-client/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/judicial-system/court-client"]
        },
        "schemas/external-openapi-generator": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn openapi-generator -o libs/judicial-system/court-client/gen/fetch -i libs/judicial-system/court-client/src/clientConfig.json"
          }
        }
      }
    },
    "judicial-system-formatters": {
      "root": "libs/judicial-system/formatters",
      "sourceRoot": "libs/judicial-system/formatters/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/judicial-system/formatters/tsconfig.lib.json",
              "libs/judicial-system/formatters/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/judicial-system/formatters/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/judicial-system/formatters/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/judicial-system/formatters"]
        }
      }
    },
    "judicial-system-types": {
      "root": "libs/judicial-system/types",
      "sourceRoot": "libs/judicial-system/types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/judicial-system/types/tsconfig.lib.json",
              "libs/judicial-system/types/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/judicial-system/types/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/judicial-system/types/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/judicial-system/types"]
        }
      }
    },
    "judicial-system-web": {
      "root": "apps/judicial-system/web",
      "sourceRoot": "apps/judicial-system/web",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "dist/apps/judicial-system/web",
            "commands": [
              "yarn nx build-next judicial-system-web",
              "yarn nx build-server judicial-system-web"
            ]
          },
          "configurations": {
            "production": {
              "args": "--prod"
            }
          }
        },
        "build-next": {
          "builder": "@nrwl/next:build",
          "options": {
            "root": "apps/judicial-system/web",
            "outputPath": "dist/apps/judicial-system/web"
          },
          "configurations": {
            "production": {}
          },
          "outputs": ["{options.outputPath}"]
        },
        "build-server": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/judicial-system/web",
            "main": "apps/judicial-system/web/server.ts",
            "tsConfig": "apps/judicial-system/web/tsconfig.json",
            "maxWorkers": 2,
            "assets": ["apps/judicial-system/web/next-modules"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "judicial-system-web:build-server"
          }
        },
        "export": {
          "builder": "@nrwl/next:export",
          "options": {
            "buildTarget": "judicial-system-web:build:production"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/judicial-system/web/tsconfig.json",
              "apps/judicial-system/web/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/judicial-system/web/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/judicial-system/web/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/judicial-system/web"]
        },
        "docker-next": {},
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'apps/judicial-system/web/messages/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "judicial-system-web-e2e": {
      "root": "apps/judicial-system/web-e2e",
      "sourceRoot": "apps/judicial-system/web-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/judicial-system/web-e2e/cypress.json",
            "tsConfig": "apps/judicial-system/web-e2e/tsconfig.e2e.json",
            "devServerTarget": "",
            "baseUrl": "http://localhost:4200"
          },
          "configurations": {
            "production": {
              "devServerTarget": ""
            }
          }
        },
        "e2e-ci": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "cypressConfig": "apps/judicial-system/web-e2e/cypress.json",
            "command": "yarn e2e-ci -n judicial-system-web-e2e -c -d dist/apps/judicial-system/web"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/judicial-system/web-e2e/tsconfig.e2e.json"],
            "exclude": [
              "**/node_modules/**",
              "!apps/judicial-system/web-e2e/**/*"
            ]
          }
        }
      }
    },
    "judicial-system-xrd-api": {
      "root": "apps/judicial-system/xrd-api",
      "sourceRoot": "apps/judicial-system/xrd-api/src",
      "projectType": "application",
      "prefix": "judicial-system-xrd-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/judicial-system/xrd-api",
            "main": "apps/judicial-system/xrd-api/src/main.ts",
            "tsConfig": "apps/judicial-system/xrd-api/tsconfig.app.json",
            "assets": [],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "judicial-system-xrd-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/judicial-system/xrd-api/tsconfig.app.json",
              "apps/judicial-system/xrd-api/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/judicial-system/xrd-api/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/judicial-system/xrd-api/jest.config.js",
            "passWithNoTests": true
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/judicial-system/xrd-api/src/openapi.yaml",
            "command": "yarn ts-node -P apps/judicial-system/xrd-api/tsconfig.app.json apps/judicial-system/xrd-api/src/buildOpenApi.ts"
          }
        },
        "docker-express": {}
      }
    },
    "localization": {
      "root": "libs/localization",
      "sourceRoot": "libs/localization/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/localization/tsconfig.lib.json",
              "libs/localization/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/localization/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/localization/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/localization"]
        }
      }
    },
    "logging": {
      "root": "libs/logging",
      "sourceRoot": "libs/logging/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/logging/tsconfig.lib.json",
              "libs/logging/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/logging/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/logging/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/logging"]
        }
      }
    },
    "message-queue": {
      "root": "libs/message-queue",
      "sourceRoot": "libs/message-queue/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/message-queue/tsconfig.lib.json",
              "libs/message-queue/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/message-queue/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/message-queue/jest.config.js",
            "passWithNoTests": true,
            "runInBand": true
          },
          "outputs": ["coverage/libs/message-queue"]
        }
      }
    },
    "nest-audit": {
      "root": "libs/nest/audit",
      "sourceRoot": "libs/nest/audit/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nest/audit/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/nest/audit"],
          "options": {
            "jestConfig": "libs/nest/audit/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "nest-config": {
      "root": "libs/nest/config",
      "sourceRoot": "libs/nest/config/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nest/config/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/nest/config"],
          "options": {
            "jestConfig": "libs/nest/config/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "nest-feature-flags": {
      "root": "libs/nest/feature-flags",
      "sourceRoot": "libs/nest/feature-flags/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nest/feature-flags/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/nest/feature-flags"],
          "options": {
            "jestConfig": "libs/nest/feature-flags/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "nest-pagination": {
      "root": "libs/nest/pagination",
      "sourceRoot": "libs/nest/pagination/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nest/pagination/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/nest/pagination"],
          "options": {
            "jestConfig": "libs/nest/pagination/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "nest-problem": {
      "root": "libs/nest/problem",
      "sourceRoot": "libs/nest/problem/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nest/problem/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/nest/problem"],
          "options": {
            "jestConfig": "libs/nest/problem/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "nest-validators": {
      "root": "libs/nest/validators",
      "sourceRoot": "libs/nest/validators/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nest/validators/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/nest/validators"],
          "options": {
            "jestConfig": "libs/nest/validators/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "next-ids-auth": {
      "root": "libs/next-ids-auth",
      "sourceRoot": "libs/next-ids-auth/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/next-ids-auth/tsconfig.lib.json",
              "libs/next-ids-auth/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/next-ids-auth/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/next-ids-auth/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/next-ids-auth"]
        }
      }
    },
    "nova-sms": {
      "root": "libs/nova-sms",
      "sourceRoot": "libs/nova-sms/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/nova-sms/tsconfig.lib.json",
              "libs/nova-sms/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/nova-sms/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/nova-sms/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/nova-sms"]
        }
      }
    },
    "plausible": {
      "root": "libs/plausible",
      "sourceRoot": "libs/plausible/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/plausible/tsconfig.lib.json",
              "libs/plausible/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/plausible/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/plausible/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/plausible"]
        }
      }
    },
    "react-feature-flags": {
      "root": "libs/react/feature-flags",
      "sourceRoot": "libs/react/feature-flags/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/react/feature-flags/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/react/feature-flags"],
          "options": {
            "jestConfig": "libs/react/feature-flags/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "reference-backend": {
      "root": "apps/reference-backend",
      "sourceRoot": "apps/reference-backend/src",
      "projectType": "application",
      "prefix": "reference-backend",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/reference-backend",
            "main": "apps/reference-backend/src/main.ts",
            "tsConfig": "apps/reference-backend/tsconfig.app.json",
            "assets": [
              {
                "glob": "*",
                "input": "apps/reference-backend/migrations",
                "output": "./migrations"
              },
              {
                "glob": ".sequelizerc",
                "input": "apps/reference-backend",
                "output": "./"
              },
              {
                "glob": "sequelize.config.js",
                "input": "apps/reference-backend",
                "output": "./"
              }
            ],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "reference-backend:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/reference-backend/tsconfig.app.json",
              "apps/reference-backend/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/reference-backend/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/reference-backend/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/reference-backend"]
        },
        "docker-express": {},
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d",
            "cwd": "apps/reference-backend"
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/reference-backend/src/openapi.yaml",
            "command": "yarn ts-node -P apps/reference-backend/tsconfig.app.json apps/reference-backend/src/buildOpenApi.ts"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../node_modules/.bin/sequelize-cli db:migrate",
            "cwd": "apps/reference-backend"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../node_modules/.bin/sequelize-cli migration:generate --name $(whoami)",
            "cwd": "apps/reference-backend"
          }
        }
      }
    },
    "reference-next-app": {
      "root": "apps/reference-next-app",
      "sourceRoot": "apps/reference-next-app",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "dist/apps/reference-next-app",
            "commands": [
              "yarn nx build-next reference-next-app",
              "yarn nx build-server reference-next-app"
            ]
          },
          "configurations": {
            "production": {
              "args": "--prod"
            }
          }
        },
        "build-next": {
          "builder": "@nrwl/next:build",
          "options": {
            "root": "apps/reference-next-app",
            "outputPath": "dist/apps/reference-next-app"
          },
          "configurations": {
            "production": {}
          },
          "outputs": ["{options.outputPath}"]
        },
        "build-server": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/reference-next-app",
            "main": "apps/reference-next-app/server.ts",
            "tsConfig": "apps/reference-next-app/tsconfig.json",
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "reference-next-app:build-server"
          }
        },
        "export": {
          "builder": "@nrwl/next:export",
          "options": {
            "buildTarget": "reference-next-app:build:production"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/reference-next-app/tsconfig.json",
              "apps/reference-next-app/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/reference-next-app/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/reference-next-app/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/reference-next-app"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'apps/reference-next-app/{screens,pages,components}/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "regulations": {
      "root": "libs/regulations",
      "sourceRoot": "libs/regulations/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/regulations/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/regulations"],
          "options": {
            "jestConfig": "libs/regulations/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "service-portal": {
      "root": "apps/service-portal",
      "sourceRoot": "apps/service-portal/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "baseHref": "/minarsidur/",
            "outputPath": "dist/apps/service-portal",
            "index": "apps/service-portal/src/index.html",
            "main": "apps/service-portal/src/Main.tsx",
            "polyfills": "apps/service-portal/src/polyfills.ts",
            "tsConfig": "apps/service-portal/tsconfig.app.json",
            "assets": [
              "apps/service-portal/src/favicon.ico",
              "apps/service-portal/src/mockServiceWorker.js",
              "apps/service-portal/src/assets"
            ],
            "styles": ["apps/service-portal/src/styles.css"],
            "scripts": [],
            "webpackConfig": "apps/service-portal/webpack.config.js",
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "service-portal:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "service-portal:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/service-portal/tsconfig.app.json",
              "apps/service-portal/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/service-portal/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/service-portal/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/service-portal"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'apps/service-portal/src/{screens,components}/**/*.{js,ts,tsx}'"
          }
        },
        "docker-static": {}
      }
    },
    "service-portal-applications": {
      "root": "libs/service-portal/applications",
      "sourceRoot": "libs/service-portal/applications/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/applications/tsconfig.lib.json",
              "libs/service-portal/applications/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/applications/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/applications/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/applications"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "parallel": false,
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract libs/service-portal/applications/src/lib/messages.ts"
          }
        }
      }
    },
    "service-portal-assets": {
      "root": "libs/service-portal/assets",
      "sourceRoot": "libs/service-portal/assets/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/assets/tsconfig.lib.json",
              "libs/service-portal/assets/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/assets/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/assets/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/assets"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/service-portal/assets/src/{lib,components,screens}/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "service-portal-constants": {
      "root": "libs/service-portal/constants",
      "sourceRoot": "libs/service-portal/constants/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/constants/tsconfig.lib.json",
              "libs/service-portal/constants/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/constants/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/constants/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/constants"]
        }
      }
    },
    "service-portal-core": {
      "root": "libs/service-portal/core",
      "sourceRoot": "libs/service-portal/core/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/core/tsconfig.lib.json",
              "libs/service-portal/core/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/service-portal/core/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/core/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/core"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/service-portal/core/src/{lib,components,helpers,screens}/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "service-portal-document-provider": {
      "root": "libs/service-portal/document-provider",
      "sourceRoot": "libs/service-portal/document-provider/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/document-provider/tsconfig.lib.json",
              "libs/service-portal/document-provider/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/document-provider/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/document-provider/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/document-provider"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node libs/localization/scripts/extract libs/service-portal/document-provider/src/lib/messages.ts"
          }
        }
      }
    },
    "service-portal-documents": {
      "root": "libs/service-portal/documents",
      "sourceRoot": "libs/service-portal/documents/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/documents/tsconfig.lib.json",
              "libs/service-portal/documents/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/documents/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/documents/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/documents"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/service-portal/documents/src/{lib,components,screens}/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "service-portal-driving-license": {
      "root": "libs/service-portal/driving-license",
      "sourceRoot": "libs/service-portal/driving-license/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/driving-license/tsconfig.lib.json",
              "libs/service-portal/driving-license/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/driving-license/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/driving-license/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/driving-license"]
        }
      }
    },
    "service-portal-e2e": {
      "root": "apps/service-portal-e2e",
      "sourceRoot": "apps/service-portal-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/service-portal-e2e/cypress.json",
            "tsConfig": "apps/service-portal-e2e/tsconfig.e2e.json",
            "devServerTarget": "service-portal:serve",
            "baseUrl": "http://localhost:4200"
          },
          "configurations": {
            "production": {
              "devServerTarget": ""
            }
          }
        },
        "e2e-ci": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn e2e-ci -n service-portal-e2e -t react -d dist/apps/service-portal -b /minarsidur -c"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/service-portal-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/service-portal-e2e/**/*"]
          }
        }
      }
    },
    "service-portal-education": {
      "root": "libs/service-portal/education",
      "sourceRoot": "libs/service-portal/education/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/education/tsconfig.lib.json",
              "libs/service-portal/education/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/education/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/education/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/education"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/service-portal/education/src/{lib,components,screens}/**/*.{js,ts,tsx}'"
          }
        },
        "init": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "yarn schemas",
              "yarn dev-services services-user-profile",
              "yarn dev-services services-search-indexer",
              "npx nx run services-user-profile:migrate"
            ],
            "parallel": false
          }
        },
        "start": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "kubectl port-forward svc/socat-xroad 8081:80 -n socat &",
              "kubectl port-forward svc/socat-soffia 8443:443 -n socat &",
              "yarn start api &",
              "yarn start services-user-profile &",
              "yarn start service-portal &"
            ],
            "parallel": true
          }
        }
      }
    },
    "service-portal-education-career": {
      "root": "libs/service-portal/education-career",
      "sourceRoot": "libs/service-portal/education-career/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/education-career/tsconfig.lib.json",
              "libs/service-portal/education-career/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/education-career/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/education-career/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/education-career"]
        }
      }
    },
    "service-portal-education-degree": {
      "root": "libs/service-portal/education-degree",
      "sourceRoot": "libs/service-portal/education-degree/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/education-degree/tsconfig.lib.json",
              "libs/service-portal/education-degree/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/education-degree/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/education-degree/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/education-degree"]
        }
      }
    },
    "service-portal-education-license": {
      "root": "libs/service-portal/education-license",
      "sourceRoot": "libs/service-portal/education-license/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/education-license/tsconfig.lib.json",
              "libs/service-portal/education-license/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/education-license/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/education-license/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/education-license"]
        }
      }
    },
    "service-portal-education-student-assessment": {
      "root": "libs/service-portal/education-student-assessment",
      "sourceRoot": "libs/service-portal/education-student-assessment/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/education-student-assessment/tsconfig.lib.json",
              "libs/service-portal/education-student-assessment/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/education-student-assessment/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/education-student-assessment/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/libs/service-portal/education-student-assessment"
          ]
        }
      }
    },
    "service-portal-eligibility": {
      "root": "libs/service-portal/eligibility",
      "sourceRoot": "libs/service-portal/eligibility/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/eligibility/tsconfig.lib.json",
              "libs/service-portal/eligibility/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/eligibility/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/eligibility/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/eligibility"]
        }
      }
    },
    "service-portal-endorsements": {
      "root": "libs/service-portal/endorsements",
      "sourceRoot": "libs/service-portal/endorsements/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/eligibility/tsconfig.lib.json",
              "libs/service-portal/eligibility/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/eligibility/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/eligibility/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/eligibility"]
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config libs/service-portal/endorsements/codegen.yml"
          }
        }
      }
    },
    "service-portal-family": {
      "root": "libs/service-portal/family",
      "sourceRoot": "libs/service-portal/family/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/family/tsconfig.lib.json",
              "libs/service-portal/family/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/family/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/family/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/family"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/service-portal/family/src/{screens,components}/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "service-portal-finance": {
      "root": "libs/service-portal/finance",
      "sourceRoot": "libs/service-portal/finance/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/finance/tsconfig.lib.json",
              "libs/service-portal/finance/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/finance/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/finance/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/finance"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/service-portal/finance/src/{lib,components,screens}/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "service-portal-graphql": {
      "root": "libs/service-portal/graphql",
      "sourceRoot": "libs/service-portal/graphql/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/graphql/tsconfig.lib.json",
              "libs/service-portal/graphql/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/graphql/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/graphql/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/graphql"]
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "output": "libs/service-portal/graphql/src/schema.ts",
            "command": "graphql-codegen --config libs/service-portal/graphql/codegen.yml"
          }
        }
      }
    },
    "service-portal-health": {
      "root": "libs/service-portal/health",
      "sourceRoot": "libs/service-portal/health/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/health/tsconfig.lib.json",
              "libs/service-portal/health/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/health/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/health/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/health"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/service-portal/health/src/{lib,components,screens}/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "service-portal-icelandic-names-registry": {
      "root": "libs/service-portal/icelandic-names-registry",
      "sourceRoot": "libs/service-portal/icelandic-names-registry/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/icelandic-names-registry/tsconfig.lib.json",
              "libs/service-portal/icelandic-names-registry/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/icelandic-names-registry/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/icelandic-names-registry/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/service-portal/icelandic-names-registry"]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node libs/localization/scripts/extract libs/service-portal/icelandic-names-registry/src/lib/messages.ts"
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "parallel": false,
            "command": "graphql-codegen --config libs/service-portal/icelandic-names-registry/codegen.yml"
          }
        }
      }
    },
    "service-portal-licenses": {
      "root": "libs/service-portal/licenses",
      "sourceRoot": "libs/service-portal/licenses/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/service-portal/licenses/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/service-portal/licenses"],
          "options": {
            "jestConfig": "libs/service-portal/licenses/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "service-portal-settings-access-control": {
      "root": "libs/service-portal/settings/access-control",
      "sourceRoot": "libs/service-portal/settings/access-control/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/service-portal/settings/access-control/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/service-portal/settings/access-control"],
          "options": {
            "jestConfig": "libs/service-portal/settings/access-control/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "service-portal-settings-islykill": {
      "root": "libs/service-portal/settings/islykill",
      "sourceRoot": "libs/service-portal/settings/islykill/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/service-portal/settings/islykill/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/service-portal/settings/islykill"],
          "options": {
            "jestConfig": "libs/service-portal/settings/islykill/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "service-portal-settings-personal-information": {
      "root": "libs/service-portal/settings/personal-information",
      "sourceRoot": "libs/service-portal/settings/personal-information/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/service-portal/settings/personal-information/tsconfig.lib.json",
              "libs/service-portal/settings/personal-information/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/service-portal/settings/personal-information/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service-portal/settings/personal-information/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/libs/service-portal/settings/personal-information"
          ]
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/service-portal/settings/personal-information/src/{lib,components,screens}/**/*.{js,ts,tsx}'"
          }
        }
      }
    },
    "service-portal-wip": {
      "root": "libs/service-portal/wip",
      "sourceRoot": "libs/service-portal/wip/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/service-portal/wip/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/service-portal/wip"],
          "options": {
            "jestConfig": "libs/service-portal/wip/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "services-auth-admin-api": {
      "root": "apps/services/auth-admin-api",
      "sourceRoot": "apps/services/auth-admin-api/src",
      "projectType": "application",
      "prefix": "auth-admin-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/services/auth-admin-api",
            "main": "apps/services/auth-admin-api/src/main.ts",
            "tsConfig": "apps/services/auth-admin-api/tsconfig.app.json",
            "assets": ["apps/services/auth-admin-api/src/assets"],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "services-auth-admin-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/services/auth-admin-api/.eslintrc",
            "tsConfig": [
              "apps/services/auth-admin-api/tsconfig.app.json",
              "apps/services/auth-admin-api/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/services/auth-admin-api/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/services/auth-admin-api/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/services/auth-admin-api"]
        },
        "docker-express": {}
      }
    },
    "services-auth-api": {
      "root": "apps/services/auth-api",
      "sourceRoot": "apps/services/auth-api/src",
      "projectType": "application",
      "prefix": "auth-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "dist/apps/services/auth-api",
            "commands": [
              "nx esbuild services-auth-api",
              "tsc --build libs/auth-api-lib/seeders/data/tsconfig.json"
            ],
            "parallel": false
          },
          "configurations": {
            "production": {
              "commands": [
                "nx esbuild services-auth-api --prod",
                "tsc --build libs/auth-api-lib/seeders/data/tsconfig.json"
              ]
            }
          }
        },
        "esbuild": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/services/auth-api",
            "main": "apps/services/auth-api/src/main.ts",
            "tsConfig": "apps/services/auth-api/tsconfig.app.json",
            "assets": [
              "apps/services/auth-api/src/assets",
              {
                "glob": "*",
                "input": "libs/auth-api-lib/migrations",
                "output": "./migrations"
              },
              {
                "glob": "*",
                "input": "libs/auth-api-lib/seeders",
                "output": "./seeders"
              },
              {
                "glob": ".sequelizerc",
                "input": "libs/auth-api-lib",
                "output": "./"
              },
              {
                "glob": "sequelize.config.js",
                "input": "libs/auth-api-lib",
                "output": "./"
              }
            ],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "services-auth-api:esbuild"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/services/auth-api/.eslintrc",
            "tsConfig": [
              "apps/services/auth-api/tsconfig.app.json",
              "apps/services/auth-api/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/services/auth-api/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/services/auth-api/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/services/auth-api"]
        },
        "docker-express": {},
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d",
            "cwd": "apps/services/auth-api"
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/services/auth-api/src/openapi.yaml",
            "command": "cross-env INIT_SCHEMA=true yarn ts-node -P apps/services/auth-api/tsconfig.app.json apps/services/auth-api/src/buildOpenApi.ts"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli db:migrate",
            "cwd": "libs/auth-api-lib"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli migration:generate --name $(whoami)",
            "cwd": "libs/auth-api-lib"
          }
        },
        "seed": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "sequelize-cli db:seed:all --seeders-path ./seeders/local",
              "sequelize-cli db:seed:all"
            ],
            "cwd": "libs/auth-api-lib"
          }
        }
      }
    },
    "services-auth-public-api": {
      "root": "apps/services/auth-public-api",
      "sourceRoot": "apps/services/auth-public-api/src",
      "projectType": "application",
      "prefix": "services-auth-public-api",
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/services/auth-public-api",
            "main": "apps/services/auth-public-api/src/main.ts",
            "tsConfig": "apps/services/auth-public-api/tsconfig.app.json",
            "assets": ["apps/services/auth-public-api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "services-auth-public-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/services/auth-public-api/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/services/auth-public-api"],
          "options": {
            "jestConfig": "apps/services/auth-public-api/jest.config.js",
            "passWithNoTests": true
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/services/auth-public-api/src/openapi.yaml",
            "command": "yarn ts-node -P apps/services/auth-public-api/tsconfig.app.json apps/services/auth-public-api/src/buildOpenApi.ts"
          }
        },
        "docker-express": {}
      }
    },
    "services-documents": {
      "root": "apps/services/documents",
      "sourceRoot": "apps/services/documents/src",
      "projectType": "application",
      "prefix": "services-documents",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/services/documents",
            "main": "apps/services/documents/src/main.ts",
            "tsConfig": "apps/services/documents/tsconfig.app.json",
            "showCircularDependencies": false,
            "assets": [
              "apps/services/documents/src/assets",
              {
                "glob": "*",
                "input": "apps/services/documents/migrations",
                "output": "./migrations"
              },
              {
                "glob": ".sequelizerc",
                "input": "apps/services/documents",
                "output": "./"
              },
              {
                "glob": "sequelize.config.js",
                "input": "apps/services/documents",
                "output": "./"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "services-documents:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/services/documents/tsconfig.app.json",
              "apps/services/documents/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/services/documents/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/services/documents/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/services/documents"]
        },
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d",
            "cwd": "apps/services/documents"
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/services/documents/src/openapi.yaml",
            "command": "yarn ts-node -P apps/services/documents/tsconfig.app.json apps/services/documents/src/buildOpenApi.ts"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli db:migrate",
            "cwd": "apps/services/documents"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli migration:generate --name $(whoami)",
            "cwd": "apps/services/documents"
          }
        },
        "docker-express": {}
      }
    },
    "services-endorsements-api": {
      "root": "apps/services/endorsements/api",
      "sourceRoot": "apps/services/endorsements/api/src",
      "projectType": "application",
      "prefix": "services-endorsements-api",
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/services/endorsements/api",
            "main": "apps/services/endorsements/api/src/main.ts",
            "tsConfig": "apps/services/endorsements/api/tsconfig.app.json",
            "assets": [
              {
                "glob": "*",
                "input": "apps/services/endorsements/api/migrations",
                "output": "./migrations"
              },
              {
                "glob": ".sequelizerc",
                "input": "apps/services/endorsements/api",
                "output": "./"
              },
              {
                "glob": "sequelize.config.js",
                "input": "apps/services/endorsements/api",
                "output": "./"
              },
              {
                "glob": "*",
                "input": "libs/email-service/src/tools/design",
                "output": "./email-service-assets"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "services-endorsements-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/services/endorsements/api/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/services/endorsements/api"],
          "options": {
            "jestConfig": "apps/services/endorsements/api/jest.config.js",
            "passWithNoTests": true
          }
        },
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d --build",
            "cwd": "apps/services/endorsements/api"
          }
        },
        "dev/init": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "yarn nx run services-endorsements-api:dev-services $NX_OPTIONS",
              "echo \"Waiting for databases to start...\" && sleep 2",
              "yarn nx run services-endorsements-api:migrate $NX_OPTIONS"
            ],
            "parallel": false
          }
        },
        "dev": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "kubectl -n socat port-forward svc/socat-xroad 8081:80 &",
              "kubectl port-forward svc/socat-soffia 8443:443 -n socat &",
              "yarn start services-endorsements-api $NX_OPTIONS &"
            ],
            "parallel": true
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn nx run services-endorsements-api:schemas/build-openapi-internal $NX_OPTIONS"
          }
        },
        "schemas/build-openapi-internal": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/services/endorsements/api/src/openapi.yaml",
            "command": "yarn ts-node -P apps/services/endorsements/api/tsconfig.app.json apps/services/endorsements/api/src/buildOpenApi.ts"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../../node_modules/.bin/sequelize-cli db:migrate",
            "cwd": "apps/services/endorsements/api"
          }
        },
        "seed": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../../node_modules/.bin/sequelize-cli db:seed",
            "cwd": "apps/services/endorsements/api"
          }
        },
        "seed/undo": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../../node_modules/.bin/sequelize-cli db:seed:undo",
            "cwd": "apps/services/endorsements/api"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../../node_modules/.bin/sequelize-cli migration:generate --name $(whoami)",
            "cwd": "apps/services/endorsements/api"
          }
        },
        "docker-express": {}
      }
    },
    "services-personal-representative": {
      "root": "apps/services/personal-representative",
      "sourceRoot": "apps/services/personal-representative/src",
      "projectType": "application",
      "prefix": "services-personal-representative",
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/services/personal-representative",
            "main": "apps/services/personal-representative/src/main.ts",
            "tsConfig": "apps/services/personal-representative/tsconfig.app.json",
            "assets": ["apps/services/personal-representative/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/services/personal-representative/src/environments/environment.ts",
                  "with": "apps/services/personal-representative/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "services-personal-representative:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/services/personal-representative/**/*.ts"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/services/personal-representative"],
          "options": {
            "jestConfig": "apps/services/personal-representative/jest.config.js",
            "passWithNoTests": true
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/services/personal-representative/src/openapi.yaml",
            "command": "yarn ts-node -P apps/services/personal-representative/tsconfig.app.json apps/services/personal-representative/src/buildOpenApi.ts"
          }
        }
      }
    },
    "services-search-indexer": {
      "root": "apps/services/search-indexer",
      "sourceRoot": "apps/services/search-indexer/src",
      "projectType": "application",
      "prefix": "services-search-indexer",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/services/search-indexer",
            "main": "apps/services/search-indexer/src/main.ts",
            "tsConfig": "apps/services/search-indexer/tsconfig.app.json",
            "assets": [
              {
                "glob": "config/**",
                "input": "apps/services/search-indexer",
                "output": "./"
              },
              {
                "glob": "migrate*.js",
                "input": "apps/services/search-indexer/migration-entrypoints",
                "output": "./"
              }
            ],
            "webpackConfig": "apps/services/search-indexer/webpack.config.js",
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "services-search-indexer:build"
          }
        },
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose -f docker-compose.yml up -d --build",
            "cwd": "apps/services/search-indexer/dev-services"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "yarn ts-node -P apps/services/search-indexer/tsconfig.app.json apps/services/search-indexer/src/migrate/migrateElastic.ts --run-migrations",
              "yarn ts-node -P apps/services/search-indexer/tsconfig.app.json apps/services/search-indexer/src/migrate/migrateKibana.ts --run-migrations"
            ],
            "cwd": "apps/services/search-indexer",
            "parallel": false
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/services/search-indexer/tsconfig.app.json",
              "apps/services/search-indexer/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/services/search-indexer/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/services/search-indexer/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/services/search-indexer"]
        },
        "docker-express": {}
      }
    },
    "services-user-notification": {
      "root": "apps/services/user-notification",
      "sourceRoot": "apps/services/user-notification/src",
      "projectType": "application",
      "prefix": "services-user-notification",
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/services/user-notification",
            "main": "apps/services/user-notification/src/main.ts",
            "tsConfig": "apps/services/user-notification/tsconfig.app.json",
            "assets": ["apps/services/user-notification/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/services/user-notification/src/environments/environment.ts",
                  "with": "apps/services/user-notification/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "services-user-notification:build"
          }
        },
        "worker": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "services-user-notification:build",
            "args": ["--job", "worker"]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/services/user-notification/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/services/user-notification"],
          "options": {
            "jestConfig": "apps/services/user-notification/jest.config.js",
            "passWithNoTests": true
          }
        },
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d --build",
            "cwd": "apps/services/user-notification"
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/services/user-notification/src/openapi.yaml",
            "command": "yarn ts-node -P apps/services/user-notification/tsconfig.app.json apps/services/user-notification/src/buildOpenApi.ts"
          }
        }
      }
    },
    "services-user-profile": {
      "root": "apps/services/user-profile",
      "sourceRoot": "apps/services/user-profile/src",
      "projectType": "application",
      "prefix": "services-user-profile",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/services/user-profile",
            "main": "apps/services/user-profile/src/main.ts",
            "tsConfig": "apps/services/user-profile/tsconfig.app.json",
            "assets": [
              "apps/services/user-profile/src/assets",
              {
                "glob": "*",
                "input": "apps/services/user-profile/migrations",
                "output": "./migrations"
              },
              {
                "glob": ".sequelizerc",
                "input": "apps/services/user-profile",
                "output": "./"
              },
              {
                "glob": "sequelize.config.js",
                "input": "apps/services/user-profile",
                "output": "./"
              }
            ],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "services-user-profile:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/services/user-profile/tsconfig.app.json",
              "apps/services/user-profile/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/services/user-profile/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/services/user-profile/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/services/user-profile"]
        },
        "dev-services": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "docker-compose up -d",
            "cwd": "apps/services/user-profile"
          }
        },
        "schemas/build-openapi": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "apps/services/user-profile/src/openapi.yaml",
            "command": "cross-env INIT_SCHEMA=true yarn ts-node -P apps/services/user-profile/tsconfig.app.json apps/services/user-profile/src/buildOpenApi.ts"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli db:migrate",
            "cwd": "apps/services/user-profile/"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "../../../node_modules/.bin/sequelize-cli migration:generate --name $(whoami)",
            "cwd": "apps/services/user-profile/"
          }
        },
        "docker-express": {}
      }
    },
    "services-xroad-collector": {
      "root": "apps/services/xroad-collector",
      "sourceRoot": "apps/services/xroad-collector/src",
      "projectType": "application",
      "prefix": "services-xroad-collector",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/services/xroad-collector",
            "main": "apps/services/xroad-collector/src/main.ts",
            "tsConfig": "apps/services/xroad-collector/tsconfig.app.json",
            "assets": ["apps/services/xroad-collector/src/assets"],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "services-xroad-collector:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/services/xroad-collector/.eslintrc",
            "tsConfig": [
              "apps/services/xroad-collector/tsconfig.app.json",
              "apps/services/xroad-collector/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/services/xroad-collector/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/services/xroad-collector/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/services/xroad-collector"]
        },
        "docker-express": {}
      }
    },
    "shared-babel": {
      "root": "libs/shared/babel",
      "sourceRoot": "libs/shared/babel/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/shared/babel/tsconfig.lib.json",
              "libs/shared/babel/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/babel/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/babel/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/babel"]
        }
      }
    },
    "shared-components": {
      "root": "libs/shared/components",
      "sourceRoot": "libs/shared/components/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/shared/components/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/components"],
          "options": {
            "jestConfig": "libs/shared/components/jest.config.js",
            "passWithNoTests": true
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "parallel": false,
            "command": "graphql-codegen --config libs/shared/components/codegen.yml"
          }
        }
      }
    },
    "shared-connected": {
      "root": "libs/shared/connected",
      "sourceRoot": "libs/shared/connected/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/shared/connected/tsconfig.lib.json",
              "libs/shared/connected/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/connected/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/connected/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/connected"]
        }
      }
    },
    "shared-constants": {
      "root": "libs/shared/constants",
      "sourceRoot": "libs/shared/constants/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/shared/constants/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/constants"],
          "options": {
            "jestConfig": "libs/shared/constants/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "shared-form-fields": {
      "root": "libs/shared/form-fields",
      "sourceRoot": "libs/shared/form-fields/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/shared/form-fields/tsconfig.lib.json",
              "libs/shared/form-fields/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/form-fields/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/form-fields/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/form-fields"]
        }
      }
    },
    "shared-mocking": {
      "root": "libs/shared/mocking",
      "sourceRoot": "libs/shared/mocking/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/shared/mocking/tsconfig.lib.json",
              "libs/shared/mocking/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/mocking/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/mocking/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/mocking"]
        }
      }
    },
    "shared-problem": {
      "root": "libs/shared/problem",
      "sourceRoot": "libs/shared/problem/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/shared/problem/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/problem"],
          "options": {
            "jestConfig": "libs/shared/problem/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "shared-translations": {
      "root": "libs/shared/translations",
      "sourceRoot": "libs/shared/translations/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/shared/translations/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/translations"],
          "options": {
            "jestConfig": "libs/shared/translations/jest.config.js",
            "passWithNoTests": true
          }
        },
        "extract-strings": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'libs/shared/translations/src/lib/*.ts'"
          }
        }
      }
    },
    "shared-types": {
      "root": "libs/shared/types",
      "sourceRoot": "libs/shared/types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/shared/types/tsconfig.lib.json",
              "libs/shared/types/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/types/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/types/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/types"]
        }
      }
    },
    "shared-utils": {
      "root": "libs/shared/utils",
      "sourceRoot": "libs/shared/utils/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/shared/utils/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/utils"],
          "options": {
            "jestConfig": "libs/shared/utils/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "skilavottord-consts": {
      "root": "libs/skilavottord/consts",
      "sourceRoot": "libs/skilavottord/consts/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/skilavottord/consts/tsconfig.lib.json",
              "libs/skilavottord/consts/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/skilavottord/consts/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/skilavottord/consts/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/skilavottord/consts"]
        }
      }
    },
    "skilavottord-types": {
      "root": "libs/skilavottord/types",
      "sourceRoot": "libs/skilavottord/types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/skilavottord/types/tsconfig.lib.json",
              "libs/skilavottord/types/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/skilavottord/types/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/skilavottord/types/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/skilavottord/types"]
        }
      }
    },
    "skilavottord-web": {
      "root": "apps/skilavottord/web",
      "sourceRoot": "apps/skilavottord/web",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "dist/apps/skilavottord/web",
            "commands": [
              "yarn nx build-next skilavottord-web",
              "yarn nx build-server skilavottord-web"
            ]
          },
          "configurations": {
            "production": {
              "args": "--prod"
            }
          }
        },
        "build-next": {
          "builder": "@nrwl/next:build",
          "options": {
            "root": "apps/skilavottord/web",
            "outputPath": "dist/apps/skilavottord/web"
          },
          "configurations": {
            "production": {}
          },
          "outputs": ["{options.outputPath}"]
        },
        "build-server": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/skilavottord/web",
            "main": "apps/skilavottord/web/server.ts",
            "tsConfig": "apps/skilavottord/web/tsconfig.json",
            "maxWorkers": 2,
            "assets": ["apps/skilavottord/web/next-modules"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "skilavottord-web:build-server"
          }
        },
        "export": {
          "builder": "@nrwl/next:export",
          "options": {
            "buildTarget": "skilavottord-web:build:production"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/skilavottord/web/tsconfig.json",
              "apps/skilavottord/web/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/skilavottord/web/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/skilavottord/web/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/skilavottord/web"]
        },
        "translations": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "quicktype is.json -o translation.d.ts --top-level Translation",
            "cwd": "apps/skilavottord/web/i18n/locales"
          }
        },
        "docker-next": {}
      }
    },
    "skilavottord-web-e2e": {
      "root": "apps/skilavottord/web-e2e",
      "sourceRoot": "apps/skilavottord/web-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/skilavottord/web-e2e/cypress.json",
            "tsConfig": "apps/skilavottord/web-e2e/tsconfig.e2e.json",
            "devServerTarget": "skilavottord-web:serve",
            "baseUrl": "http://localhost:4200"
          },
          "configurations": {
            "production": {
              "devServerTarget": ""
            }
          }
        },
        "e2e-ci": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn e2e-ci -n skilavottord-web-e2e -d dist/apps/skilavottord/web -c"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/skilavottord/web-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/skilavottord/web-e2e/**/*"]
          }
        }
      }
    },
    "skilavottord-ws": {
      "root": "apps/skilavottord/ws",
      "sourceRoot": "apps/skilavottord/ws/src",
      "projectType": "application",
      "prefix": "skilavottord-ws",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@irdnis/esbuildnx:build",
          "options": {
            "outputPath": "dist/apps/skilavottord/ws",
            "showCircularDependencies": false,
            "main": "apps/skilavottord/ws/src/main.ts",
            "tsConfig": "apps/skilavottord/ws/tsconfig.app.json",
            "assets": [
              "apps/skilavottord/ws/src/assets",
              {
                "glob": "*",
                "input": "apps/skilavottord/ws/migrations",
                "output": "./migrations"
              },
              {
                "glob": "*",
                "input": "apps/skilavottord/ws/seeders",
                "output": "./seeders"
              },
              {
                "glob": ".sequelizerc",
                "input": "apps/skilavottord/ws",
                "output": "./"
              },
              {
                "glob": "sequelize.config.js",
                "input": "apps/skilavottord/ws",
                "output": "./"
              }
            ],
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "skilavottord-ws:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/skilavottord/ws/tsconfig.app.json",
              "apps/skilavottord/ws/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/skilavottord/ws/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/skilavottord/ws/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/skilavottord/ws"]
        },
        "schemas/build-graphql-schema": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn ts-node -P apps/skilavottord/ws/tsconfig.json scripts/build-graphql-schema.ts apps/skilavottord/ws/src/app/app.module"
          }
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config apps/skilavottord/codegen.yml"
          }
        },
        "migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli db:migrate",
            "cwd": "apps/skilavottord/ws"
          }
        },
        "migrate/undo": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli db:migrate:undo",
            "cwd": "apps/skilavottord/ws"
          }
        },
        "migrate/generate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli migration:generate --name $(whoami)",
            "cwd": "apps/skilavottord/ws"
          }
        },
        "seed": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "sequelize-cli db:seed:all",
            "cwd": "apps/skilavottord/ws"
          }
        },
        "docker-express": {}
      }
    },
    "system-e2e": {
      "root": "apps/system-e2e",
      "sourceRoot": "apps/system-e2e/src",
      "projectType": "application",
      "prefix": "system-e2e",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/system-e2e/tsconfig.json"],
            "exclude": ["**/node_modules/**", "!apps/system-e2e/**/*"]
          }
        },
        "system-test": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/system-e2e/cypress.json",
            "tsConfig": "apps/system-e2e/tsconfig.json"
          }
        },
        "docker-cypress": {}
      }
    },
    "testing-containers": {
      "root": "libs/testing/containers",
      "sourceRoot": "libs/testing/containers/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/testing/containers/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/testing/containers"],
          "options": {
            "jestConfig": "libs/testing/containers/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "testing-fixtures": {
      "root": "libs/testing/fixtures",
      "sourceRoot": "libs/testing/fixtures/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/testing/fixtures/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/testing/fixtures"],
          "options": {
            "jestConfig": "libs/testing/fixtures/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "testing-nest": {
      "root": "libs/testing/nest",
      "sourceRoot": "libs/testing/nest/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/testing/nest/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/testing/nest"],
          "options": {
            "jestConfig": "libs/testing/nest/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "web": {
      "root": "apps/web",
      "sourceRoot": "apps/web",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "outputPath": "dist/apps/web",
            "commands": ["yarn nx build-next web", "yarn nx build-server web"]
          },
          "configurations": {
            "production": {
              "args": "--prod"
            }
          }
        },
        "build-next": {
          "builder": "@nrwl/next:build",
          "options": {
            "root": "apps/web",
            "outputPath": "dist/apps/web"
          },
          "configurations": {
            "production": {}
          },
          "outputs": ["{options.outputPath}"]
        },
        "build-server": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/web",
            "main": "apps/web/server.ts",
            "tsConfig": "apps/web/tsconfig.json",
            "maxWorkers": 2,
            "assets": ["apps/web/next-modules"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "web:build-server"
          }
        },
        "export": {
          "builder": "@nrwl/next:export",
          "options": {
            "buildTarget": "web:build:production"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/web/tsconfig.json",
              "apps/web/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/web/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/web/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/web"]
        },
        "schemas/codegen": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "graphql-codegen --config apps/web/codegen.yml"
          }
        },
        "docker-next": {}
      }
    },
    "web-e2e": {
      "root": "apps/web-e2e",
      "sourceRoot": "apps/web-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/web-e2e/cypress.json",
            "tsConfig": "apps/web-e2e/tsconfig.e2e.json",
            "baseUrl": "http://localhost:4200",
            "devServerTarget": "web:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": ""
            }
          }
        },
        "e2e-ci-disabled": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "yarn e2e-ci -n web-e2e -d dist/apps/web -c"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/web-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/web-e2e/**/*"]
          }
        }
      }
    }
  }
}
